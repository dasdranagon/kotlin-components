public abstract interface class com/splendo/kaluga/architecture/lifecycle/LifecycleSubscribable {
}

public class com/splendo/kaluga/architecture/navigation/NavigationAction {
	public fun <init> (Lcom/splendo/kaluga/architecture/navigation/NavigationBundle;)V
	public final fun getBundle ()Lcom/splendo/kaluga/architecture/navigation/NavigationBundle;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundle {
	public final fun get (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecRow;)Ljava/lang/Object;
	public final fun get (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType;)Ljava/lang/Object;
	public final fun getSpec ()Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpec;
	public final fun getValues ()Ljava/util/Map;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleGetError : java/lang/Exception {
	public fun <init> ()V
}

public class com/splendo/kaluga/architecture/navigation/NavigationBundleSpec {
	public fun <init> (Ljava/util/Set;)V
	public final fun getRows ()Ljava/util/Set;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecKt {
	public static final fun toBundle (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpec;Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundle;
}

public class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecRow {
	public fun <init> (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType;)V
	public final fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public final fun getAssociatedType ()Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType;
	public fun getKey ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType {
	public abstract fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$BooleanArrayType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$BooleanArrayType;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun convertValue ([Z)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$BooleanArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$BooleanType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$BooleanType;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun convertValue (Z)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$BooleanValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$BundleType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public fun convertValue (Lcom/splendo/kaluga/architecture/navigation/NavigationBundle;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$BundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public final fun getSpec ()Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpec;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$ByteArrayType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$ByteArrayType;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun convertValue ([B)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$ByteArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$ByteType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$ByteType;
	public fun convertValue (B)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$ByteValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$CharArrayType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$CharArrayType;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun convertValue ([C)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$CharArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$CharSequenceType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$CharSequenceType;
	public fun convertValue (Ljava/lang/CharSequence;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$CharSequenceValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$CharType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$CharType;
	public fun convertValue (C)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$CharValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$DateArrayType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$DateArrayType;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun convertValue (Ljava/util/List;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$DateArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$DateType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$DateType;
	public fun convertValue (Lcom/splendo/kaluga/base/utils/KalugaDate;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$DateValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$DoubleArrayType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$DoubleArrayType;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun convertValue ([D)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$DoubleArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$DoubleType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$DoubleType;
	public fun convertValue (D)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$DoubleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$FloatArrayType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$FloatArrayType;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun convertValue ([F)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$FloatArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$FloatType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$FloatType;
	public fun convertValue (F)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$FloatValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$IntegerArrayType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$IntegerArrayType;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun convertValue ([I)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$IntegerArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$IntegerType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$IntegerType;
	public fun convertValue (I)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$IntegerValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$LongArrayType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$LongArrayType;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun convertValue ([J)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$LongArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$LongType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$LongType;
	public fun convertValue (J)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$LongValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType {
	public abstract fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$OptionalType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType {
	public fun <init> (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType;)V
	public final fun component1 ()Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType;
	public fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public final fun copy (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$OptionalType;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$OptionalType;Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$OptionalType;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getType ()Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$SerializedType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType {
	public static final field Companion Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$SerializedType$Companion;
	public fun <init> (Lkotlinx/serialization/KSerializer;)V
	public fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public final fun copy (Lkotlinx/serialization/KSerializer;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$SerializedType;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$SerializedType;Lkotlinx/serialization/KSerializer;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$SerializedType;
	public fun equals (Ljava/lang/Object;)Z
	public final fun generateValue (Ljava/lang/String;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$SerializedType$Companion {
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$ShortArrayType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$ShortArrayType;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun convertValue ([S)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$ShortArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$ShortType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$ShortType;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun convertValue (S)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$ShortValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$StringArrayType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$StringArrayType;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun convertValue (Ljava/util/List;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$StringArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$StringType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$StringType;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun convertValue (Ljava/lang/String;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$StringValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$UnitType : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$NonNullableNavigationBundleSpecType {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType$UnitType;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public synthetic fun convertValue (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue;
	public fun convertValue (Lkotlin/Unit;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$UnitValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/architecture/navigation/NavigationBundleValue {
	public abstract fun getValue ()Ljava/lang/Object;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$BooleanArrayValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()[Z
	public final fun copy ([Z)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$BooleanArrayValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$BooleanArrayValue;[ZILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$BooleanArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()[Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$BooleanValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()Z
	public final fun copy (Z)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$BooleanValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$BooleanValue;ZILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$BooleanValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Ljava/lang/Boolean;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$BundleValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()Lcom/splendo/kaluga/architecture/navigation/NavigationBundle;
	public final fun copy (Lcom/splendo/kaluga/architecture/navigation/NavigationBundle;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$BundleValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$BundleValue;Lcom/splendo/kaluga/architecture/navigation/NavigationBundle;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$BundleValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Lcom/splendo/kaluga/architecture/navigation/NavigationBundle;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$ByteArrayValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()[B
	public final fun copy ([B)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$ByteArrayValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$ByteArrayValue;[BILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$ByteArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()[B
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$ByteValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()B
	public final fun copy (B)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$ByteValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$ByteValue;BILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$ByteValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Ljava/lang/Byte;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$CharArrayValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()[C
	public final fun copy ([C)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$CharArrayValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$CharArrayValue;[CILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$CharArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()[C
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$CharSequenceValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()Ljava/lang/CharSequence;
	public final fun copy (Ljava/lang/CharSequence;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$CharSequenceValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$CharSequenceValue;Ljava/lang/CharSequence;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$CharSequenceValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Ljava/lang/CharSequence;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$CharValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()C
	public final fun copy (C)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$CharValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$CharValue;CILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$CharValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Ljava/lang/Character;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$DateArrayValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$ListNavigationBundleValue {
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$DateArrayValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$DateArrayValue;Ljava/util/List;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$DateArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$DateValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()Lcom/splendo/kaluga/base/utils/KalugaDate;
	public final fun copy (Lcom/splendo/kaluga/base/utils/KalugaDate;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$DateValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$DateValue;Lcom/splendo/kaluga/base/utils/KalugaDate;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$DateValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Lcom/splendo/kaluga/base/utils/KalugaDate;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$DoubleArrayValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()[D
	public final fun copy ([D)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$DoubleArrayValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$DoubleArrayValue;[DILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$DoubleArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()[D
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$DoubleValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()D
	public final fun copy (D)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$DoubleValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$DoubleValue;DILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$DoubleValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Ljava/lang/Double;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$FloatArrayValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()[F
	public final fun copy ([F)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$FloatArrayValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$FloatArrayValue;[FILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$FloatArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()[F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$FloatValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()F
	public final fun copy (F)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$FloatValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$FloatValue;FILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$FloatValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Ljava/lang/Float;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$IntegerArrayValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()[I
	public final fun copy ([I)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$IntegerArrayValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$IntegerArrayValue;[IILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$IntegerArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()[I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$IntegerValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()I
	public final fun copy (I)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$IntegerValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$IntegerValue;IILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$IntegerValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Ljava/lang/Integer;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$ListNavigationBundleValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$LongArrayValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()[J
	public final fun copy ([J)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$LongArrayValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$LongArrayValue;[JILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$LongArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()[J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$LongValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()J
	public final fun copy (J)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$LongValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$LongValue;JILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$LongValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Ljava/lang/Long;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue {
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$OptionalValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue {
	public final fun component1 ()Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public final fun copy (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$OptionalValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$OptionalValue;Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$OptionalValue;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getOptionalValue ()Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue;
	public fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$SerializedValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue {
	public static final field Companion Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$SerializedValue$Companion;
	public final fun component1 ()Lkotlinx/serialization/KSerializer;
	public final fun component2 ()Ljava/lang/Object;
	public final fun copy (Lkotlinx/serialization/KSerializer;Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$SerializedValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$SerializedValue;Lkotlinx/serialization/KSerializer;Ljava/lang/Object;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$SerializedValue;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getSerializer ()Lkotlinx/serialization/KSerializer;
	public fun getValue ()Ljava/lang/Object;
	public final fun getValueString ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$SerializedValue$Companion {
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$ShortArrayValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()[S
	public final fun copy ([S)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$ShortArrayValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$ShortArrayValue;[SILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$ShortArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()[S
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$ShortValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()S
	public final fun copy (S)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$ShortValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$ShortValue;SILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$ShortValue;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()Ljava/lang/Short;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$StringArrayValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$ListNavigationBundleValue {
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$StringArrayValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$StringArrayValue;Ljava/util/List;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$StringArrayValue;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$StringValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$StringValue;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$StringValue;Ljava/lang/String;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$StringValue;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/navigation/NavigationBundleValue$UnitValue : com/splendo/kaluga/architecture/navigation/NavigationBundleValue$NonNullableNavigationBundleValue {
	public static final field INSTANCE Lcom/splendo/kaluga/architecture/navigation/NavigationBundleValue$UnitValue;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()Lkotlin/Unit;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public class com/splendo/kaluga/architecture/navigation/NavigationException : java/lang/RuntimeException {
	public fun <init> (Ljava/lang/String;)V
}

public abstract interface class com/splendo/kaluga/architecture/navigation/Navigator : com/splendo/kaluga/architecture/lifecycle/LifecycleSubscribable {
	public abstract fun navigate (Lcom/splendo/kaluga/architecture/navigation/NavigationAction;)V
}

public final class com/splendo/kaluga/architecture/navigation/NavigatorKt {
	public static final fun navigateOrElse (Lcom/splendo/kaluga/architecture/navigation/Navigator;Lcom/splendo/kaluga/architecture/navigation/NavigationAction;Lkotlin/jvm/functions/Function0;)V
	public static final fun navigateWithSuccess (Lcom/splendo/kaluga/architecture/navigation/Navigator;Lcom/splendo/kaluga/architecture/navigation/NavigationAction;)Z
}

public class com/splendo/kaluga/architecture/navigation/SingleValueNavigationAction : com/splendo/kaluga/architecture/navigation/NavigationAction {
	public fun <init> (Ljava/lang/Object;Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType;)V
	public final fun getType ()Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType;
	public final fun getValue ()Ljava/lang/Object;
}

public final class com/splendo/kaluga/architecture/navigation/SingleValueNavigationSpec : com/splendo/kaluga/architecture/navigation/NavigationBundleSpec {
	public fun <init> (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType;)V
}

public final class com/splendo/kaluga/architecture/navigation/SingleValueNavigationSpec$Row : com/splendo/kaluga/architecture/navigation/NavigationBundleSpecRow {
	public fun <init> (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType;)V
	public final fun component1 ()Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType;
	public final fun copy (Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType;)Lcom/splendo/kaluga/architecture/navigation/SingleValueNavigationSpec$Row;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/navigation/SingleValueNavigationSpec$Row;Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/navigation/SingleValueNavigationSpec$Row;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getType ()Lcom/splendo/kaluga/architecture/navigation/NavigationBundleSpecType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/architecture/observable/AbstractBaseDefaultSubject : com/splendo/kaluga/architecture/observable/BaseSubject, com/splendo/kaluga/architecture/observable/DefaultSubject, com/splendo/kaluga/architecture/observable/MutableDefaultInitialized {
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;)V
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservationDefault;)V
	public fun getCurrent ()Ljava/lang/Object;
	public fun getCurrentOrNull ()Ljava/lang/Object;
	public fun getDefaultValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;
	public fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;
	public synthetic fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional;
	public synthetic fun getObservation ()Lcom/splendo/kaluga/architecture/observable/Observation;
	protected fun getObservation ()Lcom/splendo/kaluga/architecture/observable/ObservationDefault;
	public fun getStateFlow ()Lkotlinx/coroutines/flow/MutableStateFlow;
	public synthetic fun getStateFlow ()Lkotlinx/coroutines/flow/StateFlow;
	public fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;
	public synthetic fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public synthetic fun getValueDelegate ()Lkotlin/properties/ReadOnlyProperty;
	public fun getValueDelegate ()Lkotlin/properties/ReadWriteProperty;
	public fun observe (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/architecture/observable/Disposable;
	public fun observeInitialized (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/architecture/observable/Disposable;
}

public abstract class com/splendo/kaluga/architecture/observable/AbstractBaseInitializedSubject : com/splendo/kaluga/architecture/observable/BaseSubject, com/splendo/kaluga/architecture/observable/InitializedSubject, com/splendo/kaluga/architecture/observable/MutableInitialized {
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;)V
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservationInitialized;)V
	public fun getCurrent ()Ljava/lang/Object;
	public fun getCurrentOrNull ()Ljava/lang/Object;
	public fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;
	public synthetic fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional;
	public synthetic fun getObservation ()Lcom/splendo/kaluga/architecture/observable/Observation;
	protected fun getObservation ()Lcom/splendo/kaluga/architecture/observable/ObservationInitialized;
	public fun getStateFlow ()Lkotlinx/coroutines/flow/MutableStateFlow;
	public synthetic fun getStateFlow ()Lkotlinx/coroutines/flow/StateFlow;
	public fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;
	public synthetic fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public synthetic fun getValueDelegate ()Lkotlin/properties/ReadOnlyProperty;
	public fun getValueDelegate ()Lkotlin/properties/ReadWriteProperty;
	public fun observe (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/architecture/observable/Disposable;
	public fun observeInitialized (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/architecture/observable/Disposable;
}

public abstract class com/splendo/kaluga/architecture/observable/AbstractBaseSubject : com/splendo/kaluga/architecture/observable/BaseObservable, com/splendo/kaluga/architecture/observable/BasicSubject {
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/Observation;Lkotlin/jvm/functions/Function1;)V
	public fun bind (Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)V
}

public abstract class com/splendo/kaluga/architecture/observable/AbstractBaseUninitializedSubject : com/splendo/kaluga/architecture/observable/BaseSubject, com/splendo/kaluga/architecture/observable/MutableUninitialized, com/splendo/kaluga/architecture/observable/UninitializedSubject {
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservationUninitialized;)V
	public fun getCurrentOrNull ()Ljava/lang/Object;
	public fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Nothing;
	public synthetic fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional;
	public synthetic fun getObservation ()Lcom/splendo/kaluga/architecture/observable/Observation;
	protected fun getObservation ()Lcom/splendo/kaluga/architecture/observable/ObservationUninitialized;
	public fun getStateFlow ()Lkotlinx/coroutines/flow/MutableStateFlow;
	public synthetic fun getStateFlow ()Lkotlinx/coroutines/flow/StateFlow;
	public fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Lcom/splendo/kaluga/architecture/observable/ObservableOptional;
	public synthetic fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public synthetic fun getValueDelegate ()Lkotlin/properties/ReadOnlyProperty;
	public fun getValueDelegate ()Lkotlin/properties/ReadWriteProperty;
	public fun observe (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/architecture/observable/Disposable;
}

public abstract class com/splendo/kaluga/architecture/observable/BaseDefaultObservable : com/splendo/kaluga/architecture/observable/BaseObservable, com/splendo/kaluga/architecture/observable/DefaultInitialized, com/splendo/kaluga/architecture/observable/DefaultObservable {
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservationDefault;)V
	public fun <init> (Ljava/lang/Object;Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;)V
	public fun getCurrent ()Ljava/lang/Object;
	public fun getCurrentOrNull ()Ljava/lang/Object;
	public fun getDefaultValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;
	public fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;
	public synthetic fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional;
	public synthetic fun getObservation ()Lcom/splendo/kaluga/architecture/observable/Observation;
	protected fun getObservation ()Lcom/splendo/kaluga/architecture/observable/ObservationDefault;
	public fun getStateFlow ()Lkotlinx/coroutines/flow/StateFlow;
	public fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;
	public synthetic fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValueDelegate ()Lkotlin/properties/ReadOnlyProperty;
	public fun observe (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/architecture/observable/Disposable;
	public fun observeInitialized (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/architecture/observable/Disposable;
}

public abstract class com/splendo/kaluga/architecture/observable/BaseDefaultSubject : com/splendo/kaluga/architecture/observable/AbstractBaseDefaultSubject {
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;)V
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservationDefault;)V
	protected final fun getPlatformSubjectObserver ()Lcom/splendo/kaluga/architecture/observable/PlatformSubjectObserver;
}

public abstract class com/splendo/kaluga/architecture/observable/BaseInitializedObservable : com/splendo/kaluga/architecture/observable/BaseObservable, com/splendo/kaluga/architecture/observable/Initialized, com/splendo/kaluga/architecture/observable/InitializedObservable {
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;)V
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservationInitialized;)V
	public fun getCurrent ()Ljava/lang/Object;
	public fun getCurrentOrNull ()Ljava/lang/Object;
	public fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;
	public synthetic fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional;
	public fun getStateFlow ()Lkotlinx/coroutines/flow/StateFlow;
	public fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;
	public synthetic fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValueDelegate ()Lkotlin/properties/ReadOnlyProperty;
	public fun observe (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/architecture/observable/Disposable;
	public fun observeInitialized (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/architecture/observable/Disposable;
}

public abstract class com/splendo/kaluga/architecture/observable/BaseInitializedSubject : com/splendo/kaluga/architecture/observable/AbstractBaseInitializedSubject {
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;)V
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservationInitialized;)V
	protected final fun getPlatformSubjectObserver ()Lcom/splendo/kaluga/architecture/observable/PlatformSubjectObserver;
}

public abstract class com/splendo/kaluga/architecture/observable/BaseObservable : com/splendo/kaluga/architecture/observable/BasicObservable, com/splendo/kaluga/architecture/observable/Initial {
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservableOptional;)V
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/Observation;)V
	public fun getCurrentOrNull ()Ljava/lang/Object;
	public fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional;
	protected fun getObservation ()Lcom/splendo/kaluga/architecture/observable/Observation;
	public fun observe (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/architecture/observable/Disposable;
}

public abstract class com/splendo/kaluga/architecture/observable/BaseSimpleDisposable : com/splendo/kaluga/architecture/observable/Disposable {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public fun addTo (Lcom/splendo/kaluga/architecture/observable/DisposeBag;)V
	protected fun afterDispose ()V
	public fun dispose ()V
}

public abstract class com/splendo/kaluga/architecture/observable/BaseSubject : com/splendo/kaluga/architecture/observable/AbstractBaseSubject {
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/Observation;Lkotlin/jvm/functions/Function1;)V
	public final fun bind (Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)V
	protected abstract fun getPlatformSubjectObserver ()Lcom/splendo/kaluga/architecture/observable/PlatformSubjectObserver;
}

public abstract class com/splendo/kaluga/architecture/observable/BaseUninitializedObservable : com/splendo/kaluga/architecture/observable/BaseObservable, com/splendo/kaluga/architecture/observable/Uninitialized, com/splendo/kaluga/architecture/observable/UninitializedObservable {
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservationUninitialized;)V
	public fun getCurrentOrNull ()Ljava/lang/Object;
	public fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Nothing;
	public synthetic fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional;
	public synthetic fun getObservation ()Lcom/splendo/kaluga/architecture/observable/Observation;
	protected fun getObservation ()Lcom/splendo/kaluga/architecture/observable/ObservationUninitialized;
	public fun getStateFlow ()Lkotlinx/coroutines/flow/StateFlow;
	public fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Lcom/splendo/kaluga/architecture/observable/ObservableOptional;
	public synthetic fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValueDelegate ()Lkotlin/properties/ReadOnlyProperty;
	public fun observe (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/architecture/observable/Disposable;
}

public abstract class com/splendo/kaluga/architecture/observable/BaseUninitializedSubject : com/splendo/kaluga/architecture/observable/AbstractBaseUninitializedSubject {
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservationUninitialized;)V
	protected final fun getPlatformSubjectObserver ()Lcom/splendo/kaluga/architecture/observable/PlatformSubjectObserver;
}

public abstract interface class com/splendo/kaluga/architecture/observable/BasicObservable : com/splendo/kaluga/architecture/observable/Initial, kotlin/properties/ReadOnlyProperty {
}

public abstract interface class com/splendo/kaluga/architecture/observable/BasicSubject : com/splendo/kaluga/architecture/observable/BasicObservable, com/splendo/kaluga/architecture/observable/SuspendableSetter {
	public abstract fun bind (Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)V
}

public final class com/splendo/kaluga/architecture/observable/DefaultFlowObservable : com/splendo/kaluga/architecture/observable/BaseDefaultObservable {
	public fun <init> (Ljava/lang/Object;Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/Flow;Lcom/splendo/kaluga/architecture/observable/ObservationDefault;)V
	public synthetic fun <init> (Ljava/lang/Object;Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/Flow;Lcom/splendo/kaluga/architecture/observable/ObservationDefault;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public abstract interface class com/splendo/kaluga/architecture/observable/DefaultInitialized : com/splendo/kaluga/architecture/observable/Initialized {
	public abstract fun getDefaultValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;
}

public abstract interface class com/splendo/kaluga/architecture/observable/DefaultObservable : com/splendo/kaluga/architecture/observable/BasicObservable, com/splendo/kaluga/architecture/observable/DefaultInitialized {
}

public abstract interface class com/splendo/kaluga/architecture/observable/DefaultSubject : com/splendo/kaluga/architecture/observable/BasicSubject, com/splendo/kaluga/architecture/observable/DefaultObservable, com/splendo/kaluga/architecture/observable/MutableDefaultInitialized {
}

public abstract interface class com/splendo/kaluga/architecture/observable/Disposable {
	public abstract fun addTo (Lcom/splendo/kaluga/architecture/observable/DisposeBag;)V
	public abstract fun dispose ()V
}

public final class com/splendo/kaluga/architecture/observable/DisposeBag : com/splendo/kaluga/architecture/observable/Disposable {
	public fun <init> ()V
	public final fun add (Lcom/splendo/kaluga/architecture/observable/Disposable;)V
	public final fun add (Lcom/splendo/kaluga/architecture/observable/DisposeBag;)V
	public fun addTo (Lcom/splendo/kaluga/architecture/observable/DisposeBag;)V
	public fun dispose ()V
}

public final class com/splendo/kaluga/architecture/observable/FlowInitializedObservable : com/splendo/kaluga/architecture/observable/BaseInitializedObservable {
	public fun <init> (Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/Flow;Lcom/splendo/kaluga/architecture/observable/ObservationInitialized;)V
	public synthetic fun <init> (Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/Flow;Lcom/splendo/kaluga/architecture/observable/ObservationInitialized;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCoroutineScope ()Lkotlinx/coroutines/CoroutineScope;
	public final fun getFlow ()Lkotlinx/coroutines/flow/Flow;
}

public final class com/splendo/kaluga/architecture/observable/FlowObservable : com/splendo/kaluga/architecture/observable/BaseUninitializedObservable {
	public fun <init> (Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/Flow;Lcom/splendo/kaluga/architecture/observable/ObservationUninitialized;)V
	public synthetic fun <init> (Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/Flow;Lcom/splendo/kaluga/architecture/observable/ObservationUninitialized;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCoroutineScope ()Lkotlinx/coroutines/CoroutineScope;
	public final fun getFlow ()Lkotlinx/coroutines/flow/Flow;
}

public final class com/splendo/kaluga/architecture/observable/FlowObservableKt {
	public static final fun toDefaultObservable (Lkotlinx/coroutines/flow/Flow;Ljava/lang/Object;Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/architecture/observable/DefaultFlowObservable;
	public static synthetic fun toDefaultObservable$default (Lkotlinx/coroutines/flow/Flow;Ljava/lang/Object;Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/observable/DefaultFlowObservable;
	public static final fun toInitializedObservable (Lkotlinx/coroutines/flow/Flow;Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/architecture/observable/FlowInitializedObservable;
	public static final fun toInitializedObservable (Lkotlinx/coroutines/flow/MutableStateFlow;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/architecture/observable/FlowInitializedObservable;
	public static synthetic fun toInitializedObservable$default (Lkotlinx/coroutines/flow/Flow;Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/observable/FlowInitializedObservable;
	public static synthetic fun toInitializedObservable$default (Lkotlinx/coroutines/flow/MutableStateFlow;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/observable/FlowInitializedObservable;
	public static final fun toUninitializedObservable (Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/architecture/observable/FlowObservable;
	public static synthetic fun toUninitializedObservable$default (Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/observable/FlowObservable;
}

public final class com/splendo/kaluga/architecture/observable/FlowSubjectKt {
	public static final fun toDefaultSubject (Lkotlinx/coroutines/flow/MutableSharedFlow;Ljava/lang/Object;Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/architecture/observable/SharedFlowDefaultSubject;
	public static final fun toDefaultSubject (Lkotlinx/coroutines/flow/MutableStateFlow;Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/architecture/observable/StateFlowDefaultSubject;
	public static synthetic fun toDefaultSubject$default (Lkotlinx/coroutines/flow/MutableSharedFlow;Ljava/lang/Object;Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/observable/SharedFlowDefaultSubject;
	public static synthetic fun toDefaultSubject$default (Lkotlinx/coroutines/flow/MutableStateFlow;Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/observable/StateFlowDefaultSubject;
	public static final fun toInitializedSubject (Lkotlinx/coroutines/flow/MutableSharedFlow;Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/architecture/observable/SharedFlowInitializedSubject;
	public static final fun toInitializedSubject (Lkotlinx/coroutines/flow/MutableStateFlow;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/architecture/observable/StateFlowInitializedSubject;
	public static synthetic fun toInitializedSubject$default (Lkotlinx/coroutines/flow/MutableSharedFlow;Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/observable/SharedFlowInitializedSubject;
	public static synthetic fun toInitializedSubject$default (Lkotlinx/coroutines/flow/MutableStateFlow;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/observable/StateFlowInitializedSubject;
	public static final fun toUninitializedSubject (Lkotlinx/coroutines/flow/MutableSharedFlow;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/architecture/observable/SharedFlowSubject;
	public static synthetic fun toUninitializedSubject$default (Lkotlinx/coroutines/flow/MutableSharedFlow;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/observable/SharedFlowSubject;
}

public abstract interface class com/splendo/kaluga/architecture/observable/Initial {
	public abstract fun getCurrentOrNull ()Ljava/lang/Object;
	public abstract fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional;
	public abstract fun observe (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/architecture/observable/Disposable;
}

public abstract interface class com/splendo/kaluga/architecture/observable/Initialized : com/splendo/kaluga/architecture/observable/Initial, com/splendo/kaluga/architecture/observable/WithState {
	public abstract fun getCurrent ()Ljava/lang/Object;
	public abstract fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;
	public abstract fun observeInitialized (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/architecture/observable/Disposable;
}

public abstract interface class com/splendo/kaluga/architecture/observable/InitializedObservable : com/splendo/kaluga/architecture/observable/BasicObservable, com/splendo/kaluga/architecture/observable/Initialized {
}

public abstract interface class com/splendo/kaluga/architecture/observable/InitializedSubject : com/splendo/kaluga/architecture/observable/BasicSubject, com/splendo/kaluga/architecture/observable/InitializedObservable, com/splendo/kaluga/architecture/observable/MutableInitialized {
}

public abstract interface class com/splendo/kaluga/architecture/observable/MutableDefaultInitialized : com/splendo/kaluga/architecture/observable/DefaultInitialized, com/splendo/kaluga/architecture/observable/WithMutableState {
}

public abstract interface class com/splendo/kaluga/architecture/observable/MutableInitialized : com/splendo/kaluga/architecture/observable/Initialized, com/splendo/kaluga/architecture/observable/WithMutableState {
}

public abstract interface class com/splendo/kaluga/architecture/observable/MutableUninitialized : com/splendo/kaluga/architecture/observable/Uninitialized, com/splendo/kaluga/architecture/observable/WithMutableState {
}

public final class com/splendo/kaluga/architecture/observable/ObservableKt {
	public static final fun observableOf (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/observable/SimpleInitializedObservable;
}

public abstract class com/splendo/kaluga/architecture/observable/ObservableOptional : kotlin/properties/ReadOnlyProperty {
	public abstract fun getValueOrNull ()Ljava/lang/Object;
}

public final class com/splendo/kaluga/architecture/observable/ObservableOptional$Nothing : com/splendo/kaluga/architecture/observable/ObservableOptional {
	public fun <init> ()V
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValueOrNull ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/observable/ObservableOptional$Value : com/splendo/kaluga/architecture/observable/ObservableOptional {
	public fun <init> (Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun copy (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;Ljava/lang/Object;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Ljava/lang/Object;
	public fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValueOrNull ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/architecture/observable/ObservableOptionalKt {
	public static final fun asResult (Lcom/splendo/kaluga/architecture/observable/ObservableOptional;Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;)Lcom/splendo/kaluga/architecture/observable/ObservableOptional;
}

public class com/splendo/kaluga/architecture/observable/Observation : com/splendo/kaluga/architecture/observable/Initial {
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservableOptional;)V
	public final fun getBeforeObservedValueGet ()Lkotlin/jvm/functions/Function1;
	public final fun getCurrentObserved ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional;
	public fun getCurrentOrNull ()Ljava/lang/Object;
	public fun getDefaultValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;
	public fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional;
	public final fun getObservedValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional;
	public final fun getOnFirstObservation ()Lkotlin/jvm/functions/Function0;
	public fun observe (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/architecture/observable/Disposable;
	public final fun setBeforeObservedValueGet (Lkotlin/jvm/functions/Function1;)V
	public final fun setObservedValue (Lcom/splendo/kaluga/architecture/observable/ObservableOptional;)V
	public final fun setOnFirstObservation (Lkotlin/jvm/functions/Function0;)V
	public final fun setValue (Lcom/splendo/kaluga/architecture/observable/ObservableOptional;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class com/splendo/kaluga/architecture/observable/ObservationDefault : com/splendo/kaluga/architecture/observable/Observation, com/splendo/kaluga/architecture/observable/MutableDefaultInitialized, kotlin/properties/ReadWriteProperty {
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;)V
	public fun <init> (Ljava/lang/Object;Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;)V
	public fun getCurrent ()Ljava/lang/Object;
	public fun getDefaultValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;
	public fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;
	public synthetic fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional;
	public fun getStateFlow ()Lkotlinx/coroutines/flow/MutableStateFlow;
	public synthetic fun getStateFlow ()Lkotlinx/coroutines/flow/StateFlow;
	public fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public synthetic fun getValueDelegate ()Lkotlin/properties/ReadOnlyProperty;
	public fun getValueDelegate ()Lkotlin/properties/ReadWriteProperty;
	public fun observeInitialized (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/architecture/observable/Disposable;
	public fun setValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public class com/splendo/kaluga/architecture/observable/ObservationInitialized : com/splendo/kaluga/architecture/observable/Observation, com/splendo/kaluga/architecture/observable/MutableInitialized, kotlin/properties/ReadWriteProperty {
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;)V
	public fun <init> (Ljava/lang/Object;)V
	public fun getCurrent ()Ljava/lang/Object;
	public fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;
	public synthetic fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional;
	public fun getStateFlow ()Lkotlinx/coroutines/flow/MutableStateFlow;
	public synthetic fun getStateFlow ()Lkotlinx/coroutines/flow/StateFlow;
	public fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public synthetic fun getValueDelegate ()Lkotlin/properties/ReadOnlyProperty;
	public fun getValueDelegate ()Lkotlin/properties/ReadWriteProperty;
	public fun observeInitialized (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/architecture/observable/Disposable;
	public fun setValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class com/splendo/kaluga/architecture/observable/ObservationKt {
	public static final fun observeFlow (Lcom/splendo/kaluga/architecture/observable/Observation;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/Flow;)V
	public static synthetic fun observeFlow$default (Lcom/splendo/kaluga/architecture/observable/Observation;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/Flow;ILjava/lang/Object;)V
}

public final class com/splendo/kaluga/architecture/observable/ObservationUninitialized : com/splendo/kaluga/architecture/observable/Observation, com/splendo/kaluga/architecture/observable/MutableUninitialized, kotlin/properties/ReadWriteProperty {
	public fun <init> ()V
	public fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Nothing;
	public synthetic fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional;
	public fun getStateFlow ()Lkotlinx/coroutines/flow/MutableStateFlow;
	public synthetic fun getStateFlow ()Lkotlinx/coroutines/flow/StateFlow;
	public fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public synthetic fun getValueDelegate ()Lkotlin/properties/ReadOnlyProperty;
	public fun getValueDelegate ()Lkotlin/properties/ReadWriteProperty;
	public fun setValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public abstract interface class com/splendo/kaluga/architecture/observable/PlatformSubjectObserver {
}

public abstract interface class com/splendo/kaluga/architecture/observable/Postable {
	public abstract fun post (Ljava/lang/Object;)V
}

public final class com/splendo/kaluga/architecture/observable/ReadOnlyPropertyDefaultObservable : com/splendo/kaluga/architecture/observable/BaseDefaultObservable {
	public fun <init> (Ljava/lang/Object;Lkotlin/properties/ReadOnlyProperty;Lcom/splendo/kaluga/architecture/observable/ObservationDefault;)V
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/properties/ReadOnlyProperty;Lcom/splendo/kaluga/architecture/observable/ObservationDefault;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class com/splendo/kaluga/architecture/observable/ReadOnlyPropertyInitializedObservable : com/splendo/kaluga/architecture/observable/BaseInitializedObservable, com/splendo/kaluga/architecture/observable/InitializedObservable {
	public fun <init> (Lkotlin/properties/ReadOnlyProperty;Lcom/splendo/kaluga/architecture/observable/ObservationInitialized;)V
	public synthetic fun <init> (Lkotlin/properties/ReadOnlyProperty;Lcom/splendo/kaluga/architecture/observable/ObservationInitialized;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class com/splendo/kaluga/architecture/observable/ReadOnlyPropertyObservableKt {
	public static final fun toDefaultObservable (Lkotlin/properties/ReadOnlyProperty;Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/observable/ReadOnlyPropertyDefaultObservable;
	public static final fun toInitializedObservable (Lkotlin/properties/ReadOnlyProperty;)Lcom/splendo/kaluga/architecture/observable/ReadOnlyPropertyInitializedObservable;
}

public final class com/splendo/kaluga/architecture/observable/ReadWritePropertyDefaultSubject : com/splendo/kaluga/architecture/observable/BaseDefaultSubject, com/splendo/kaluga/architecture/observable/SuspendableSetter {
	public fun <init> (Ljava/lang/Object;Lkotlin/properties/ReadWriteProperty;Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lcom/splendo/kaluga/architecture/observable/ObservationDefault;)V
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/properties/ReadWriteProperty;Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lcom/splendo/kaluga/architecture/observable/ObservationDefault;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun post (Ljava/lang/Object;)V
	public fun set (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/splendo/kaluga/architecture/observable/ReadWritePropertyInitializedSubject : com/splendo/kaluga/architecture/observable/BaseInitializedSubject, com/splendo/kaluga/architecture/observable/SuspendableSetter {
	public fun <init> (Lkotlin/properties/ReadWriteProperty;Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lcom/splendo/kaluga/architecture/observable/ObservationInitialized;)V
	public synthetic fun <init> (Lkotlin/properties/ReadWriteProperty;Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lcom/splendo/kaluga/architecture/observable/ObservationInitialized;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun post (Ljava/lang/Object;)V
	public fun set (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/splendo/kaluga/architecture/observable/ReadWritePropertySubjectKt {
	public static final fun toDefaultSubject (Lkotlin/properties/ReadWriteProperty;Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/architecture/observable/ReadWritePropertyDefaultSubject;
	public static synthetic fun toDefaultSubject$default (Lkotlin/properties/ReadWriteProperty;Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/observable/ReadWritePropertyDefaultSubject;
	public static final fun toInitializedSubject (Lkotlin/properties/ReadWriteProperty;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/architecture/observable/ReadWritePropertyInitializedSubject;
	public static synthetic fun toInitializedSubject$default (Lkotlin/properties/ReadWriteProperty;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Lcom/splendo/kaluga/architecture/observable/ReadWritePropertyInitializedSubject;
}

public class com/splendo/kaluga/architecture/observable/SharedFlowDefaultSubject : com/splendo/kaluga/architecture/observable/BaseDefaultSubject, com/splendo/kaluga/architecture/observable/SuspendableSetter {
	public fun <init> (Ljava/lang/Object;Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/MutableSharedFlow;ZLcom/splendo/kaluga/architecture/observable/ObservationDefault;)V
	public synthetic fun <init> (Ljava/lang/Object;Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/MutableSharedFlow;ZLcom/splendo/kaluga/architecture/observable/ObservationDefault;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun post (Ljava/lang/Object;)V
	public fun set (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class com/splendo/kaluga/architecture/observable/SharedFlowInitializedSubject : com/splendo/kaluga/architecture/observable/BaseInitializedSubject, com/splendo/kaluga/architecture/observable/SuspendableSetter {
	public fun <init> (Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/MutableSharedFlow;ZLcom/splendo/kaluga/architecture/observable/ObservationInitialized;)V
	public synthetic fun <init> (Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/MutableSharedFlow;ZLcom/splendo/kaluga/architecture/observable/ObservationInitialized;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun post (Ljava/lang/Object;)V
	public fun set (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class com/splendo/kaluga/architecture/observable/SharedFlowSubject : com/splendo/kaluga/architecture/observable/BaseUninitializedSubject, com/splendo/kaluga/architecture/observable/SuspendableSetter {
	public fun <init> (Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/MutableSharedFlow;ZLcom/splendo/kaluga/architecture/observable/ObservationUninitialized;)V
	public synthetic fun <init> (Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/MutableSharedFlow;ZLcom/splendo/kaluga/architecture/observable/ObservationUninitialized;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun post (Ljava/lang/Object;)V
	public fun set (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/splendo/kaluga/architecture/observable/SimpleDefaultSubject : com/splendo/kaluga/architecture/observable/BaseDefaultSubject {
	public fun <init> (Ljava/lang/Object;Ljava/lang/Object;)V
	public synthetic fun <init> (Ljava/lang/Object;Ljava/lang/Object;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun post (Ljava/lang/Object;)V
	public fun set (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/splendo/kaluga/architecture/observable/SimpleDisposable : com/splendo/kaluga/architecture/observable/BaseSimpleDisposable {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
}

public final class com/splendo/kaluga/architecture/observable/SimpleInitializedObservable : com/splendo/kaluga/architecture/observable/BaseInitializedObservable {
	public fun <init> (Ljava/lang/Object;)V
}

public final class com/splendo/kaluga/architecture/observable/SimpleInitializedSubject : com/splendo/kaluga/architecture/observable/BaseInitializedSubject {
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Value;)V
	public fun <init> (Lcom/splendo/kaluga/architecture/observable/ObservationInitialized;)V
	public fun <init> (Ljava/lang/Object;)V
	public synthetic fun getObservation ()Lcom/splendo/kaluga/architecture/observable/Observation;
	public fun post (Ljava/lang/Object;)V
	public fun set (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class com/splendo/kaluga/architecture/observable/StateFlowDefaultSubject : com/splendo/kaluga/architecture/observable/BaseDefaultSubject, com/splendo/kaluga/architecture/observable/SuspendableSetter {
	public fun <init> (Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/MutableStateFlow;ZLcom/splendo/kaluga/architecture/observable/ObservationDefault;)V
	public synthetic fun <init> (Ljava/lang/Object;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/MutableStateFlow;ZLcom/splendo/kaluga/architecture/observable/ObservationDefault;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getCoroutineScope ()Lkotlinx/coroutines/CoroutineScope;
	public fun post (Ljava/lang/Object;)V
	public fun set (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class com/splendo/kaluga/architecture/observable/StateFlowInitializedSubject : com/splendo/kaluga/architecture/observable/BaseInitializedSubject, com/splendo/kaluga/architecture/observable/SuspendableSetter {
	public fun <init> (Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/MutableStateFlow;ZLcom/splendo/kaluga/architecture/observable/ObservationInitialized;)V
	public synthetic fun <init> (Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/MutableStateFlow;ZLcom/splendo/kaluga/architecture/observable/ObservationInitialized;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getCoroutineScope ()Lkotlinx/coroutines/CoroutineScope;
	public fun post (Ljava/lang/Object;)V
	public fun set (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/splendo/kaluga/architecture/observable/SubjectKt {
	public static final fun bind (Lcom/splendo/kaluga/architecture/observable/BasicSubject;Lkotlinx/coroutines/CoroutineScope;)V
	public static final fun subjectOf (Ljava/lang/Object;)Lcom/splendo/kaluga/architecture/observable/SimpleInitializedSubject;
}

public abstract interface class com/splendo/kaluga/architecture/observable/SuspendableSetter : com/splendo/kaluga/architecture/observable/Postable {
	public abstract fun set (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class com/splendo/kaluga/architecture/observable/Uninitialized : com/splendo/kaluga/architecture/observable/Initial, com/splendo/kaluga/architecture/observable/WithState {
	public abstract fun getInitialValue ()Lcom/splendo/kaluga/architecture/observable/ObservableOptional$Nothing;
}

public abstract interface class com/splendo/kaluga/architecture/observable/UninitializedObservable : com/splendo/kaluga/architecture/observable/BasicObservable, com/splendo/kaluga/architecture/observable/Uninitialized {
}

public abstract interface class com/splendo/kaluga/architecture/observable/UninitializedSubject : com/splendo/kaluga/architecture/observable/BasicSubject, com/splendo/kaluga/architecture/observable/MutableUninitialized, com/splendo/kaluga/architecture/observable/UninitializedObservable {
}

public abstract interface class com/splendo/kaluga/architecture/observable/WithMutableState : com/splendo/kaluga/architecture/observable/WithState {
	public abstract fun getStateFlow ()Lkotlinx/coroutines/flow/MutableStateFlow;
	public abstract fun getValueDelegate ()Lkotlin/properties/ReadWriteProperty;
}

public abstract interface class com/splendo/kaluga/architecture/observable/WithState {
	public abstract fun getStateFlow ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getValueDelegate ()Lkotlin/properties/ReadOnlyProperty;
}

public class com/splendo/kaluga/architecture/viewmodel/BaseLifecycleViewModel : com/splendo/kaluga/architecture/viewmodel/LifecycleViewModel {
	public fun <init> ([Lcom/splendo/kaluga/architecture/lifecycle/LifecycleSubscribable;)V
	protected final fun addLifecycleSubscribables ([Lcom/splendo/kaluga/architecture/lifecycle/LifecycleSubscribable;)V
	public final fun didPause ()V
	public final fun didResume ()V
	public final fun getActiveLifecycleSubscribables ()Lkotlinx/coroutines/flow/StateFlow;
	protected fun onPause ()V
	protected fun onResume (Lkotlinx/coroutines/CoroutineScope;)V
	protected final fun removeLifecycleSubscribables ([Lcom/splendo/kaluga/architecture/lifecycle/LifecycleSubscribable;)V
}

public class com/splendo/kaluga/architecture/viewmodel/BaseViewModel : com/splendo/kaluga/architecture/viewmodel/BaseLifecycleViewModel {
	public fun <init> ()V
}

public class com/splendo/kaluga/architecture/viewmodel/LifecycleViewModel {
	public final fun clear ()V
	public final fun getCoroutineScope ()Lkotlinx/coroutines/CoroutineScope;
	protected fun onCleared ()V
}

public class com/splendo/kaluga/architecture/viewmodel/NavigatingViewModel : com/splendo/kaluga/architecture/viewmodel/BaseLifecycleViewModel {
	public fun <init> (Lcom/splendo/kaluga/architecture/navigation/Navigator;[Lcom/splendo/kaluga/architecture/lifecycle/LifecycleSubscribable;)V
	protected final fun getNavigator ()Lcom/splendo/kaluga/architecture/navigation/Navigator;
}

public class com/splendo/kaluga/architecture/viewmodel/ViewModel : com/splendo/kaluga/architecture/viewmodel/LifecycleViewModel {
	public fun <init> ()V
}

