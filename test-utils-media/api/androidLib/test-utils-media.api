public final class com/splendo/kaluga/test/media/MockBaseMediaManager : com/splendo/kaluga/media/BaseMediaManager, com/splendo/kaluga/media/MediaSurfaceController, com/splendo/kaluga/media/VolumeController {
	public fun <init> (Lcom/splendo/kaluga/media/MediaSurfaceProvider;Lcom/splendo/kaluga/test/media/MockVolumeController;Lcom/splendo/kaluga/test/media/MockMediaSurfaceController;Lkotlin/coroutines/CoroutineContext;Z)V
	public synthetic fun <init> (Lcom/splendo/kaluga/media/MediaSurfaceProvider;Lcom/splendo/kaluga/test/media/MockVolumeController;Lcom/splendo/kaluga/test/media/MockMediaSurfaceController;Lkotlin/coroutines/CoroutineContext;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCleanUpMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public fun getCurrentVolume ()Lkotlinx/coroutines/flow/Flow;
	public final fun getHandleCreatePlayableMediaMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getHandleResetMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getInitializeMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getMediaSurfaceController ()Lcom/splendo/kaluga/test/media/MockMediaSurfaceController;
	public final fun getPauseMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getPlayMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getStartSeekMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getStopMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getVolumeController ()Lcom/splendo/kaluga/test/media/MockVolumeController;
	public fun handleCompleted ()V
	public fun handleError (Lcom/splendo/kaluga/media/PlaybackError;)V
	public fun handlePrepared (Lcom/splendo/kaluga/media/PlayableMedia;)V
	public fun handleSeekCompleted (Z)V
	public fun initialize (Lcom/splendo/kaluga/media/PlayableMedia;)V
	public fun pause ()V
	public fun play (F)V
	public fun renderVideoOnSurface (Lcom/splendo/kaluga/media/MediaSurface;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun stop ()V
	public fun updateVolume (FLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/splendo/kaluga/test/media/MockBaseMediaManager$Builder : com/splendo/kaluga/media/BaseMediaManager$Builder {
	public fun <init> ()V
	public fun <init> (Lcom/splendo/kaluga/test/media/MockVolumeController;Lcom/splendo/kaluga/test/media/MockMediaSurfaceController;Z)V
	public synthetic fun <init> (Lcom/splendo/kaluga/test/media/MockVolumeController;Lcom/splendo/kaluga/test/media/MockMediaSurfaceController;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun create (Lcom/splendo/kaluga/media/MediaSurfaceProvider;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/media/BaseMediaManager;
	public final fun getBuiltMediaManagers ()Lcom/splendo/kaluga/base/collections/ConcurrentMutableList;
	public final fun getCreateMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getMediaSurfaceController ()Lcom/splendo/kaluga/test/media/MockMediaSurfaceController;
	public final fun getVolumeController ()Lcom/splendo/kaluga/test/media/MockVolumeController;
}

public final class com/splendo/kaluga/test/media/MockMediaManager : com/splendo/kaluga/media/MediaManager, com/splendo/kaluga/media/MediaSurfaceController, com/splendo/kaluga/media/VolumeController {
	public fun <init> (Lkotlinx/coroutines/flow/MutableSharedFlow;Lcom/splendo/kaluga/test/media/MockVolumeController;Lcom/splendo/kaluga/test/media/MockMediaSurfaceController;Z)V
	public synthetic fun <init> (Lkotlinx/coroutines/flow/MutableSharedFlow;Lcom/splendo/kaluga/test/media/MockVolumeController;Lcom/splendo/kaluga/test/media/MockMediaSurfaceController;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun close ()V
	public fun createPlayableMedia (Lcom/splendo/kaluga/media/MediaSource;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getCreatePlayableMediaMock ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
	public fun getCurrentVolume ()Lkotlinx/coroutines/flow/Flow;
	public final fun getEndMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public synthetic fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	public fun getEvents ()Lkotlinx/coroutines/flow/MutableSharedFlow;
	public final fun getInitializeMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getMediaSurfaceController ()Lcom/splendo/kaluga/test/media/MockMediaSurfaceController;
	public final fun getPauseMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getPlayMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getResetMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getSeekToMock ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
	public final fun getStopMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getVolumeController ()Lcom/splendo/kaluga/test/media/MockVolumeController;
	public fun initialize (Lcom/splendo/kaluga/media/PlayableMedia;)V
	public fun pause ()V
	public fun play (F)V
	public fun renderVideoOnSurface (Lcom/splendo/kaluga/media/MediaSurface;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun reset ()V
	public fun seekTo-VtjQ1oo (JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun stop ()V
	public fun updateVolume (FLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/splendo/kaluga/test/media/MockMediaPlayer : com/splendo/kaluga/media/MediaPlayer, com/splendo/kaluga/media/MediaSurfaceController, com/splendo/kaluga/media/VolumeController {
	public fun <init> (Lkotlinx/coroutines/flow/MutableStateFlow;Lkotlinx/coroutines/flow/MutableStateFlow;Lcom/splendo/kaluga/test/media/MockVolumeController;Lcom/splendo/kaluga/test/media/MockMediaSurfaceController;)V
	public fun awaitCompletion (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun close ()V
	public fun forceStart (Lcom/splendo/kaluga/media/PlaybackState$PlaybackParameters;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getAwaitCompletionMock ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
	public synthetic fun getControls ()Lkotlinx/coroutines/flow/Flow;
	public fun getControls ()Lkotlinx/coroutines/flow/MutableStateFlow;
	public fun getCurrentVolume ()Lkotlinx/coroutines/flow/Flow;
	public final fun getEndMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getForceStartMock ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
	public final fun getInitializeForMock ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
	public final fun getMediaSurfaceController ()Lcom/splendo/kaluga/test/media/MockMediaSurfaceController;
	public synthetic fun getPlayableMedia ()Lkotlinx/coroutines/flow/Flow;
	public fun getPlayableMedia ()Lkotlinx/coroutines/flow/MutableStateFlow;
	public final fun getResetMock ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
	public final fun getVolumeController ()Lcom/splendo/kaluga/test/media/MockVolumeController;
	public fun initializeFor (Lcom/splendo/kaluga/media/MediaSource;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun renderVideoOnSurface (Lcom/splendo/kaluga/media/MediaSurface;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun reset (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun updateVolume (FLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/splendo/kaluga/test/media/MockMediaSurfaceController : com/splendo/kaluga/media/MediaSurfaceController {
	public fun <init> ()V
	public final fun getRenderVideoOnSurfaceMock ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
	public fun renderVideoOnSurface (Lcom/splendo/kaluga/media/MediaSurface;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/splendo/kaluga/test/media/MockMediaSurfaceKt {
	public static final fun createMockMediaSurface ()Lcom/splendo/kaluga/media/MediaSurface;
}

public final class com/splendo/kaluga/test/media/MockMediaSurfaceProvider : com/splendo/kaluga/media/MediaSurfaceProvider {
	public fun <init> (Lkotlinx/coroutines/flow/MutableSharedFlow;)V
	public synthetic fun getSurface ()Lkotlinx/coroutines/flow/Flow;
	public fun getSurface ()Lkotlinx/coroutines/flow/MutableSharedFlow;
}

public final class com/splendo/kaluga/test/media/MockPlayableMedia : com/splendo/kaluga/media/PlayableMedia {
	public synthetic fun <init> (Lcom/splendo/kaluga/media/MediaSource;JJLkotlinx/coroutines/flow/MutableStateFlow;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Lcom/splendo/kaluga/media/MediaSource;JJLkotlinx/coroutines/flow/MutableStateFlow;Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCurrentPlayTime-UwyO8pc ()J
	public fun getDuration-UwyO8pc ()J
	public synthetic fun getResolution ()Lkotlinx/coroutines/flow/Flow;
	public fun getResolution ()Lkotlinx/coroutines/flow/MutableStateFlow;
	public fun getSource ()Lcom/splendo/kaluga/media/MediaSource;
	public fun getTracks ()Ljava/util/List;
	public fun setCurrentPlayTime-LRDsOJo (J)V
}

public abstract class com/splendo/kaluga/test/media/MockPlaybackState {
	public static final field Companion Lcom/splendo/kaluga/test/media/MockPlaybackState$Companion;
	public abstract fun getPlaybackState ()Lcom/splendo/kaluga/media/PlaybackState;
}

public abstract class com/splendo/kaluga/test/media/MockPlaybackState$Active : com/splendo/kaluga/test/media/MockPlaybackState {
	public final fun failWithError (Lcom/splendo/kaluga/media/PlaybackError;)Lkotlin/jvm/functions/Function1;
	public abstract fun getConfiguration ()Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public final fun getEnd ()Lkotlin/jvm/functions/Function1;
	public final fun getMediaSurfaceController ()Lcom/splendo/kaluga/media/MediaSurfaceController;
	public final fun getReset ()Lkotlin/jvm/functions/Function1;
	public final fun getVolumeController ()Lcom/splendo/kaluga/media/VolumeController;
}

public final class com/splendo/kaluga/test/media/MockPlaybackState$Closed : com/splendo/kaluga/test/media/MockPlaybackState, com/splendo/kaluga/media/PlaybackState$Closed {
	public static final field INSTANCE Lcom/splendo/kaluga/test/media/MockPlaybackState$Closed;
	public fun getPlaybackState ()Lcom/splendo/kaluga/media/PlaybackState;
	public fun remain ()Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/test/media/MockPlaybackState$Companion {
	public final fun createSeekToMock ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
}

public final class com/splendo/kaluga/test/media/MockPlaybackState$Completed : com/splendo/kaluga/test/media/MockPlaybackState$Prepared, com/splendo/kaluga/media/PlaybackState$Completed {
	public fun <init> (Lcom/splendo/kaluga/media/PlayableMedia;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;)V
	public final fun component1 ()Lcom/splendo/kaluga/media/PlayableMedia;
	public final fun component2 ()Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public final fun copy (Lcom/splendo/kaluga/media/PlayableMedia;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;)Lcom/splendo/kaluga/test/media/MockPlaybackState$Completed;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/test/media/MockPlaybackState$Completed;Lcom/splendo/kaluga/media/PlayableMedia;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;ILjava/lang/Object;)Lcom/splendo/kaluga/test/media/MockPlaybackState$Completed;
	public fun equals (Ljava/lang/Object;)Z
	public fun getConfiguration ()Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public fun getPlayableMedia ()Lcom/splendo/kaluga/media/PlayableMedia;
	public fun getPlaybackState ()Lcom/splendo/kaluga/media/PlaybackState;
	public fun hashCode ()I
	public fun remain ()Lkotlin/jvm/functions/Function1;
	public fun start (Lcom/splendo/kaluga/media/PlaybackState$PlaybackParameters;)Lkotlin/jvm/functions/Function1;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/test/media/MockPlaybackState$Configuration {
	public fun <init> ()V
	public fun <init> (Lkotlin/jvm/functions/Function1;Lcom/splendo/kaluga/media/VolumeController;Lcom/splendo/kaluga/media/MediaSurfaceController;Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function1;Lcom/splendo/kaluga/media/VolumeController;Lcom/splendo/kaluga/media/MediaSurfaceController;Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lkotlin/jvm/functions/Function1;
	public final fun component2 ()Lcom/splendo/kaluga/media/VolumeController;
	public final fun component3 ()Lcom/splendo/kaluga/media/MediaSurfaceController;
	public final fun component4 ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
	public final fun copy (Lkotlin/jvm/functions/Function1;Lcom/splendo/kaluga/media/VolumeController;Lcom/splendo/kaluga/media/MediaSurfaceController;Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;)Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;Lkotlin/jvm/functions/Function1;Lcom/splendo/kaluga/media/VolumeController;Lcom/splendo/kaluga/media/MediaSurfaceController;Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;ILjava/lang/Object;)Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMediaProvider ()Lkotlin/jvm/functions/Function1;
	public final fun getMediaSurfaceController ()Lcom/splendo/kaluga/media/MediaSurfaceController;
	public final fun getSeekToMock ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
	public final fun getVolumeController ()Lcom/splendo/kaluga/media/VolumeController;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/test/media/MockPlaybackState$Error : com/splendo/kaluga/test/media/MockPlaybackState$Active, com/splendo/kaluga/media/PlaybackState$Error {
	public fun <init> (Lcom/splendo/kaluga/media/PlaybackError;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;)V
	public final fun component1 ()Lcom/splendo/kaluga/media/PlaybackError;
	public final fun component2 ()Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public final fun copy (Lcom/splendo/kaluga/media/PlaybackError;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;)Lcom/splendo/kaluga/test/media/MockPlaybackState$Error;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/test/media/MockPlaybackState$Error;Lcom/splendo/kaluga/media/PlaybackError;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;ILjava/lang/Object;)Lcom/splendo/kaluga/test/media/MockPlaybackState$Error;
	public fun equals (Ljava/lang/Object;)Z
	public fun getConfiguration ()Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public fun getError ()Lcom/splendo/kaluga/media/PlaybackError;
	public fun getPlaybackState ()Lcom/splendo/kaluga/media/PlaybackState;
	public fun hashCode ()I
	public fun remain ()Lkotlin/jvm/functions/Function1;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/test/media/MockPlaybackState$Idle : com/splendo/kaluga/test/media/MockPlaybackState$Prepared, com/splendo/kaluga/media/PlaybackState$Idle {
	public fun <init> (Lcom/splendo/kaluga/media/PlayableMedia;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;)V
	public final fun component1 ()Lcom/splendo/kaluga/media/PlayableMedia;
	public final fun component2 ()Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public final fun copy (Lcom/splendo/kaluga/media/PlayableMedia;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;)Lcom/splendo/kaluga/test/media/MockPlaybackState$Idle;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/test/media/MockPlaybackState$Idle;Lcom/splendo/kaluga/media/PlayableMedia;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;ILjava/lang/Object;)Lcom/splendo/kaluga/test/media/MockPlaybackState$Idle;
	public fun equals (Ljava/lang/Object;)Z
	public fun getConfiguration ()Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public fun getPlayableMedia ()Lcom/splendo/kaluga/media/PlayableMedia;
	public fun getPlaybackState ()Lcom/splendo/kaluga/media/PlaybackState;
	public fun hashCode ()I
	public fun play (Lcom/splendo/kaluga/media/PlaybackState$PlaybackParameters;)Lkotlin/jvm/functions/Function1;
	public fun remain ()Lkotlin/jvm/functions/Function1;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/test/media/MockPlaybackState$Initialized : com/splendo/kaluga/test/media/MockPlaybackState$Active, com/splendo/kaluga/media/PlaybackState$Initialized {
	public fun <init> (Lcom/splendo/kaluga/media/PlayableMedia;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;)V
	public final fun component2 ()Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public final fun copy (Lcom/splendo/kaluga/media/PlayableMedia;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;)Lcom/splendo/kaluga/test/media/MockPlaybackState$Initialized;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/test/media/MockPlaybackState$Initialized;Lcom/splendo/kaluga/media/PlayableMedia;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;ILjava/lang/Object;)Lcom/splendo/kaluga/test/media/MockPlaybackState$Initialized;
	public fun equals (Ljava/lang/Object;)Z
	public fun getConfiguration ()Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public fun getPlaybackState ()Lcom/splendo/kaluga/media/PlaybackState;
	public fun getSource ()Lcom/splendo/kaluga/media/MediaSource;
	public fun hashCode ()I
	public fun prepared (Lcom/splendo/kaluga/media/PlayableMedia;)Lkotlin/jvm/functions/Function1;
	public fun remain ()Lkotlin/jvm/functions/Function1;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/test/media/MockPlaybackState$Paused : com/splendo/kaluga/test/media/MockPlaybackState$Prepared, com/splendo/kaluga/media/PlaybackState$Paused {
	public fun <init> (Lcom/splendo/kaluga/media/PlaybackState$PlaybackParameters;Lcom/splendo/kaluga/media/PlayableMedia;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;)V
	public final fun component1 ()Lcom/splendo/kaluga/media/PlaybackState$PlaybackParameters;
	public final fun component2 ()Lcom/splendo/kaluga/media/PlayableMedia;
	public final fun component3 ()Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public final fun copy (Lcom/splendo/kaluga/media/PlaybackState$PlaybackParameters;Lcom/splendo/kaluga/media/PlayableMedia;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;)Lcom/splendo/kaluga/test/media/MockPlaybackState$Paused;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/test/media/MockPlaybackState$Paused;Lcom/splendo/kaluga/media/PlaybackState$PlaybackParameters;Lcom/splendo/kaluga/media/PlayableMedia;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;ILjava/lang/Object;)Lcom/splendo/kaluga/test/media/MockPlaybackState$Paused;
	public fun equals (Ljava/lang/Object;)Z
	public fun getConfiguration ()Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public fun getPlay ()Lkotlin/jvm/functions/Function1;
	public fun getPlayableMedia ()Lcom/splendo/kaluga/media/PlayableMedia;
	public fun getPlaybackParameters ()Lcom/splendo/kaluga/media/PlaybackState$PlaybackParameters;
	public fun getPlaybackState ()Lcom/splendo/kaluga/media/PlaybackState;
	public fun hashCode ()I
	public fun remain ()Lkotlin/jvm/functions/Function1;
	public fun toString ()Ljava/lang/String;
	public fun updatePlaybackParameters (Lcom/splendo/kaluga/media/PlaybackState$PlaybackParameters;)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/test/media/MockPlaybackState$Playing : com/splendo/kaluga/test/media/MockPlaybackState$Prepared, com/splendo/kaluga/media/PlaybackState$Playing {
	public fun <init> (Lcom/splendo/kaluga/media/PlaybackState$PlaybackParameters;Lcom/splendo/kaluga/media/PlayableMedia;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;)V
	public final fun component1 ()Lcom/splendo/kaluga/media/PlaybackState$PlaybackParameters;
	public final fun component2 ()Lcom/splendo/kaluga/media/PlayableMedia;
	public final fun component3 ()Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public final fun copy (Lcom/splendo/kaluga/media/PlaybackState$PlaybackParameters;Lcom/splendo/kaluga/media/PlayableMedia;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;)Lcom/splendo/kaluga/test/media/MockPlaybackState$Playing;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/test/media/MockPlaybackState$Playing;Lcom/splendo/kaluga/media/PlaybackState$PlaybackParameters;Lcom/splendo/kaluga/media/PlayableMedia;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;ILjava/lang/Object;)Lcom/splendo/kaluga/test/media/MockPlaybackState$Playing;
	public fun equals (Ljava/lang/Object;)Z
	public fun getCompletedLoop ()Lkotlin/jvm/functions/Function1;
	public fun getConfiguration ()Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public fun getPause ()Lkotlin/jvm/functions/Function1;
	public fun getPlayableMedia ()Lcom/splendo/kaluga/media/PlayableMedia;
	public fun getPlaybackParameters ()Lcom/splendo/kaluga/media/PlaybackState$PlaybackParameters;
	public fun getPlaybackState ()Lcom/splendo/kaluga/media/PlaybackState;
	public fun hashCode ()I
	public fun remain ()Lkotlin/jvm/functions/Function1;
	public fun toString ()Ljava/lang/String;
	public fun updatePlaybackParameters (Lcom/splendo/kaluga/media/PlaybackState$PlaybackParameters;)Lkotlin/jvm/functions/Function1;
}

public abstract class com/splendo/kaluga/test/media/MockPlaybackState$Prepared : com/splendo/kaluga/test/media/MockPlaybackState$Active {
	public abstract fun getPlayableMedia ()Lcom/splendo/kaluga/media/PlayableMedia;
	public final fun getStop ()Lkotlin/jvm/functions/Function1;
	public final fun seekTo-VtjQ1oo (JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/splendo/kaluga/test/media/MockPlaybackState$Stopped : com/splendo/kaluga/test/media/MockPlaybackState$Active, com/splendo/kaluga/media/PlaybackState$Stopped {
	public fun <init> (Lcom/splendo/kaluga/media/PlayableMedia;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;)V
	public final fun component2 ()Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public final fun copy (Lcom/splendo/kaluga/media/PlayableMedia;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;)Lcom/splendo/kaluga/test/media/MockPlaybackState$Stopped;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/test/media/MockPlaybackState$Stopped;Lcom/splendo/kaluga/media/PlayableMedia;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;ILjava/lang/Object;)Lcom/splendo/kaluga/test/media/MockPlaybackState$Stopped;
	public fun equals (Ljava/lang/Object;)Z
	public fun getConfiguration ()Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public fun getPlaybackState ()Lcom/splendo/kaluga/media/PlaybackState;
	public fun getReinitialize ()Lkotlin/jvm/functions/Function1;
	public fun hashCode ()I
	public fun remain ()Lkotlin/jvm/functions/Function1;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/test/media/MockPlaybackState$Uninitialized : com/splendo/kaluga/test/media/MockPlaybackState$Active, com/splendo/kaluga/media/PlaybackState$Uninitialized {
	public fun <init> (Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;)V
	public final fun component1 ()Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public final fun copy (Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;)Lcom/splendo/kaluga/test/media/MockPlaybackState$Uninitialized;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/test/media/MockPlaybackState$Uninitialized;Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;ILjava/lang/Object;)Lcom/splendo/kaluga/test/media/MockPlaybackState$Uninitialized;
	public fun equals (Ljava/lang/Object;)Z
	public fun getConfiguration ()Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;
	public fun getPlaybackState ()Lcom/splendo/kaluga/media/PlaybackState;
	public fun hashCode ()I
	public fun initialize (Lcom/splendo/kaluga/media/MediaSource;)Lkotlin/jvm/functions/Function1;
	public fun remain ()Lkotlin/jvm/functions/Function1;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/test/media/MockPlaybackStateRepo : com/splendo/kaluga/media/BasePlaybackStateRepo {
	public fun <init> (Lcom/splendo/kaluga/test/media/MockPlaybackState$Configuration;Lkotlin/coroutines/CoroutineContext;)V
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/CoroutineContext;)V
}

public final class com/splendo/kaluga/test/media/MockVolumeController : com/splendo/kaluga/media/VolumeController {
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun getCurrentVolume ()Lkotlinx/coroutines/flow/Flow;
	public fun getCurrentVolume ()Lkotlinx/coroutines/flow/MutableStateFlow;
	public final fun getUpdateVolumeMock ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
	public fun updateVolume (FLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

