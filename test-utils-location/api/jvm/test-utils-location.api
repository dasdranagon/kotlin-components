public final class com/splendo/kaluga/test/location/MockBaseLocationManager : com/splendo/kaluga/location/BaseLocationManager {
	public fun <init> (ZLcom/splendo/kaluga/location/BaseLocationManager$Settings;Lkotlinx/coroutines/CoroutineScope;)V
	public final fun getLocationEnabled ()Lkotlinx/coroutines/flow/MutableStateFlow;
	public synthetic fun getLocationMonitor ()Lcom/splendo/kaluga/location/LocationMonitor;
	public fun getLocationMonitor ()Lcom/splendo/kaluga/test/location/MockLocationMonitor;
	public final fun getRequestEnableLocationMock ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
	public final fun getStartMonitoringLocationEnabledMock ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
	public final fun getStartMonitoringLocationMock ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
	public final fun getStartMonitoringPermissionsMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getStopMonitoringLocationEnabledMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getStopMonitoringLocationMock ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
	public final fun getStopMonitoringPermissionsMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public fun requestEnableLocation (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun startMonitoringLocation (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun startMonitoringLocationEnabled (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun startMonitoringPermissions ()V
	public fun stopMonitoringLocation (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun stopMonitoringLocationEnabled ()V
	public fun stopMonitoringPermissions ()V
}

public final class com/splendo/kaluga/test/location/MockBaseLocationManager$Builder : com/splendo/kaluga/location/BaseLocationManager$Builder {
	public fun <init> (ZZ)V
	public synthetic fun <init> (ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun create (Lcom/splendo/kaluga/location/BaseLocationManager$Settings;Lkotlinx/coroutines/CoroutineScope;)Lcom/splendo/kaluga/location/BaseLocationManager;
	public final fun getBuiltLocationManagers ()Lco/touchlab/stately/collections/IsoMutableList;
	public final fun getCreateMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getInitialLocationEnabled ()Z
}

public final class com/splendo/kaluga/test/location/MockLocationManager : com/splendo/kaluga/location/LocationManager {
	public fun <init> (Lcom/splendo/kaluga/permissions/location/LocationPermission;Lkotlinx/coroutines/flow/MutableSharedFlow;Lkotlinx/coroutines/flow/MutableSharedFlow;)V
	public synthetic fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	public fun getEvents ()Lkotlinx/coroutines/flow/MutableSharedFlow;
	public fun getLocationPermission ()Lcom/splendo/kaluga/permissions/location/LocationPermission;
	public synthetic fun getLocations ()Lkotlinx/coroutines/flow/Flow;
	public fun getLocations ()Lkotlinx/coroutines/flow/MutableSharedFlow;
	public final fun getRequestEnableLocationMock ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
	public final fun getStartMonitoringLocationEnabledMock ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
	public final fun getStartMonitoringLocationMock ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
	public final fun getStartMonitoringPermissionsMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getStopMonitoringLocationEnabledMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getStopMonitoringLocationMock ()Lcom/splendo/kaluga/test/base/mock/SuspendMethodMock;
	public final fun getStopMonitoringPermissionsMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public fun isLocationEnabled ()Z
	public final fun isLocationEnabledMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public fun requestEnableLocation (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun startMonitoringLocation (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun startMonitoringLocationEnabled (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun startMonitoringPermissions ()V
	public fun stopMonitoringLocation (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun stopMonitoringLocationEnabled ()V
	public fun stopMonitoringPermissions ()V
}

public final class com/splendo/kaluga/test/location/MockLocationMonitor : com/splendo/kaluga/test/base/monitor/MockServiceMonitor, com/splendo/kaluga/location/LocationMonitor {
	public fun <init> (Lkotlinx/coroutines/flow/StateFlow;)V
	public synthetic fun isEnabled ()Lkotlinx/coroutines/flow/Flow;
	public fun isEnabled ()Lkotlinx/coroutines/flow/StateFlow;
}

public abstract class com/splendo/kaluga/test/location/MockLocationState {
}

public abstract class com/splendo/kaluga/test/location/MockLocationState$Active : com/splendo/kaluga/test/location/MockLocationState {
	public final fun getDeinitialized ()Lkotlin/jvm/functions/Function1;
	public abstract fun getLocation ()Lcom/splendo/kaluga/location/Location;
}

public final class com/splendo/kaluga/test/location/MockLocationState$Deinitialized : com/splendo/kaluga/test/location/MockLocationState$Inactive, com/splendo/kaluga/location/LocationState$Deinitialized {
	public fun <init> (Lcom/splendo/kaluga/location/Location;)V
	public final fun component1 ()Lcom/splendo/kaluga/location/Location;
	public final fun copy (Lcom/splendo/kaluga/location/Location;)Lcom/splendo/kaluga/test/location/MockLocationState$Deinitialized;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/test/location/MockLocationState$Deinitialized;Lcom/splendo/kaluga/location/Location;ILjava/lang/Object;)Lcom/splendo/kaluga/test/location/MockLocationState$Deinitialized;
	public fun equals (Ljava/lang/Object;)Z
	public fun finalState (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getLocation ()Lcom/splendo/kaluga/location/Location;
	public fun getReinitialize ()Lkotlin/jvm/functions/Function1;
	public fun hashCode ()I
	public fun initialState (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun remain ()Lkotlin/jvm/functions/Function1;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/test/location/MockLocationState$Disabled : com/splendo/kaluga/test/location/MockLocationState$Active {
}

public final class com/splendo/kaluga/test/location/MockLocationState$Disabled$NoGPS : com/splendo/kaluga/test/location/MockLocationState$Disabled, com/splendo/kaluga/location/LocationState$Disabled$NoGPS {
	public fun <init> (Lcom/splendo/kaluga/location/Location;)V
	public fun finalState (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEnable ()Lkotlin/jvm/functions/Function1;
	public fun getLocation ()Lcom/splendo/kaluga/location/Location;
	public fun getRevokePermission ()Lkotlin/jvm/functions/Function1;
	public fun initialState (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun remain ()Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/test/location/MockLocationState$Disabled$NotPermitted : com/splendo/kaluga/test/location/MockLocationState$Disabled, com/splendo/kaluga/location/LocationState$Disabled$NotPermitted {
	public fun <init> (Lcom/splendo/kaluga/location/Location;)V
	public fun finalState (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getLocation ()Lcom/splendo/kaluga/location/Location;
	public fun initialState (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun permit (Z)Lkotlin/jvm/functions/Function1;
	public fun remain ()Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/test/location/MockLocationState$Enabled : com/splendo/kaluga/test/location/MockLocationState$Active, com/splendo/kaluga/location/LocationState$Enabled {
	public fun <init> (Lcom/splendo/kaluga/location/Location;)V
	public final fun component1 ()Lcom/splendo/kaluga/location/Location;
	public final fun copy (Lcom/splendo/kaluga/location/Location;)Lcom/splendo/kaluga/test/location/MockLocationState$Enabled;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/test/location/MockLocationState$Enabled;Lcom/splendo/kaluga/location/Location;ILjava/lang/Object;)Lcom/splendo/kaluga/test/location/MockLocationState$Enabled;
	public fun equals (Ljava/lang/Object;)Z
	public fun finalState (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getDisable ()Lkotlin/jvm/functions/Function1;
	public fun getLocation ()Lcom/splendo/kaluga/location/Location;
	public fun getRevokePermission ()Lkotlin/jvm/functions/Function1;
	public fun hashCode ()I
	public fun initialState (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun remain ()Lkotlin/jvm/functions/Function1;
	public fun toString ()Ljava/lang/String;
	public fun updateWithLocation (Lcom/splendo/kaluga/location/Location$KnownLocation;)Lkotlin/jvm/functions/Function1;
}

public abstract class com/splendo/kaluga/test/location/MockLocationState$Inactive : com/splendo/kaluga/test/location/MockLocationState {
}

public final class com/splendo/kaluga/test/location/MockLocationState$Initializing : com/splendo/kaluga/test/location/MockLocationState$Active, com/splendo/kaluga/location/LocationState$Initializing {
	public fun <init> (Lcom/splendo/kaluga/location/Location;)V
	public final fun component1 ()Lcom/splendo/kaluga/location/Location;
	public final fun copy (Lcom/splendo/kaluga/location/Location;)Lcom/splendo/kaluga/test/location/MockLocationState$Initializing;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/test/location/MockLocationState$Initializing;Lcom/splendo/kaluga/location/Location;ILjava/lang/Object;)Lcom/splendo/kaluga/test/location/MockLocationState$Initializing;
	public fun equals (Ljava/lang/Object;)Z
	public fun finalState (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getLocation ()Lcom/splendo/kaluga/location/Location;
	public fun hashCode ()I
	public fun initialState (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun initialize (ZZ)Lkotlin/jvm/functions/Function1;
	public fun remain ()Lkotlin/jvm/functions/Function1;
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/test/location/MockLocationState$NotInitialized : com/splendo/kaluga/test/location/MockLocationState$Inactive, com/splendo/kaluga/location/LocationState$NotInitialized {
	public static final field INSTANCE Lcom/splendo/kaluga/test/location/MockLocationState$NotInitialized;
	public fun finalState (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getLocation ()Lcom/splendo/kaluga/location/Location;
	public fun initialState (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun remain ()Lkotlin/jvm/functions/Function1;
	public final fun startInitializing ()Lkotlin/jvm/functions/Function0;
}

public final class com/splendo/kaluga/test/location/MockLocationState$PermittedHandler {
	public fun <init> (Lcom/splendo/kaluga/location/Location;)V
	public final fun getLocation ()Lcom/splendo/kaluga/location/Location;
	public final fun getRevokePermission ()Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/test/location/MockLocationStateRepoBuilder : com/splendo/kaluga/location/LocationStateRepo$Builder {
	public fun <init> (Lcom/splendo/kaluga/permissions/base/Permissions;Lcom/splendo/kaluga/location/BaseLocationManager$Builder;Z)V
	public synthetic fun <init> (Lcom/splendo/kaluga/permissions/base/Permissions;Lcom/splendo/kaluga/location/BaseLocationManager$Builder;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun create (Lcom/splendo/kaluga/permissions/location/LocationPermission;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/location/LocationStateRepo;
	public final fun getBuiltLocationStateRepo ()Lco/touchlab/stately/collections/IsoMutableList;
	public final fun getCreateMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public final fun getLocationManagerBuilder ()Lcom/splendo/kaluga/location/BaseLocationManager$Builder;
}

