name: iOS tests
on: pull_request

jobs:
  build:
    uses: ./.github/workflows/setup_macos.yaml
    with:
      gradleTask: compileKotlinIosSimulatorArm64

  lint:
    needs: build
    runs-on: macos-15
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup tools and cache for workspace
      uses: ./.github/workflows/setup_tools_macos/
      with:
        kotlinVersion: ${{ needs.build.outputs.kotlinVersion }}
        arch: ${{ runner.arch == 'X86' && 'x86' || runner.arch == 'X64' && 'x86_64' || runner.arch == 'ARM' && 'arm32' || 'arm64' }}

    - name: ktLint
      run: ./gradlew lintKotlin

    - name: ktLint report
      uses: actions/upload-artifact@v4
      with:
        name: ktLint report
        path: build/reports/ktlint
      if: ${{ failure() }}

  test:
    needs: build
    runs-on: macos-15
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJSON(needs.build.outputs.projects) }}
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Setup tools and cache for workspace
        uses: ./.github/workflows/setup_tools_macos/
        with:
          kotlinVersion: ${{ needs.build.outputs.kotlinVersion }}
          arch: ${{ runner.arch == 'X86' && 'x86' || runner.arch == 'X64' && 'x86_64' || runner.arch == 'ARM' && 'arm32' || 'arm64' }}

      - name: run iOS tests
        run: ./gradlew :${{ matrix.module }}:ios${{ runner.arch == 'X86' && 'X86' || runner.arch == 'X64' && 'x86_64' || runner.arch == 'ARM' && 'SimulatorArm32' || 'SimulatorArm64' }}Test
      - name: Upload iOS test artifact
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: ${{ matrix.module}} iOS Test Report HTML
          path: ${{ format('**{0}/build/reports/tests/ios{1}Test', matrix.module, runner.arch == 'X86' && 'X86' || runner.arch == 'X64' && 'x86_64' || runner.arch == 'ARM' && 'SimulatorArm32' || 'SimulatorArm64') }}

  example:
    needs: build
    runs-on: macos-15
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Setup tools and cache for workspace
        uses: ./.github/workflows/setup_tools_macos/
        with:
          kotlinVersion: ${{ needs.build.outputs.kotlinVersion }}
          arch: ${{ runner.arch == 'X86' && 'x86' || runner.arch == 'X64' && 'x86_64' || runner.arch == 'ARM' && 'arm32' || 'arm64' }}

      - name: run install
        working-directory: example/ios
        run: | 
          brew install sourcery
          ./install.sh

      - name: build example
        working-directory: example/ios
        run: set -o pipefail && xcodebuild -project Demo.xcodeproj -sdk iphonesimulator -scheme Demo -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.0' | tee xcodebuild.log | xcpretty
        shell: bash

      - name: 'upload xcodebuild.log'
        uses: actions/upload-artifact@v4
        with:
          name: "xcodebuild.log"
          path: "example/ios/xcodebuild.log"
