public final class com/splendo/kaluga/permissions/base/AndroidPermissionState : java/lang/Enum {
	public static final field Companion Lcom/splendo/kaluga/permissions/base/AndroidPermissionState$Companion;
	public static final field DENIED Lcom/splendo/kaluga/permissions/base/AndroidPermissionState;
	public static final field DENIED_DO_NOT_ASK Lcom/splendo/kaluga/permissions/base/AndroidPermissionState;
	public static final field GRANTED Lcom/splendo/kaluga/permissions/base/AndroidPermissionState;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/splendo/kaluga/permissions/base/AndroidPermissionState;
	public static fun values ()[Lcom/splendo/kaluga/permissions/base/AndroidPermissionState;
}

public final class com/splendo/kaluga/permissions/base/AndroidPermissionState$Companion {
	public final fun get (Landroid/app/Activity;Ljava/lang/String;)Lcom/splendo/kaluga/permissions/base/AndroidPermissionState;
	public final fun get (Landroid/content/Context;Ljava/lang/String;)Lcom/splendo/kaluga/permissions/base/AndroidPermissionState;
}

public abstract interface class com/splendo/kaluga/permissions/base/AndroidPermissionStateHandler {
	public abstract fun status (Lcom/splendo/kaluga/permissions/base/AndroidPermissionState;)V
}

public final class com/splendo/kaluga/permissions/base/AndroidPermissionsManager : kotlinx/coroutines/CoroutineScope {
	public fun <init> (Landroid/content/Context;[Ljava/lang/String;Lkotlinx/coroutines/CoroutineScope;Ljava/lang/String;Lcom/splendo/kaluga/logging/Logger;Lcom/splendo/kaluga/permissions/base/AndroidPermissionStateHandler;)V
	public synthetic fun <init> (Landroid/content/Context;[Ljava/lang/String;Lkotlinx/coroutines/CoroutineScope;Ljava/lang/String;Lcom/splendo/kaluga/logging/Logger;Lcom/splendo/kaluga/permissions/base/AndroidPermissionStateHandler;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getHasPermissions ()Z
	public final fun requestPermissions ()V
	public final fun startMonitoring-LRDsOJo (J)V
	public final fun stopMonitoring ()V
}

public abstract class com/splendo/kaluga/permissions/base/BasePermissionManager : com/splendo/kaluga/permissions/base/PermissionManager, kotlinx/coroutines/CoroutineScope {
	public fun <init> (Lcom/splendo/kaluga/permissions/base/Permission;Lcom/splendo/kaluga/permissions/base/BasePermissionManager$Settings;Lkotlinx/coroutines/CoroutineScope;)V
	protected final fun emitEvent (Lcom/splendo/kaluga/permissions/base/PermissionManager$Event;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	protected final fun getEventChannel ()Lkotlinx/coroutines/channels/Channel;
	public fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	protected final fun getLogTag ()Ljava/lang/String;
	protected final fun getLogger ()Lcom/splendo/kaluga/logging/Logger;
	public final fun getPermission ()Lcom/splendo/kaluga/permissions/base/Permission;
	protected abstract fun monitoringDidStart-LRDsOJo (J)V
	protected abstract fun monitoringDidStop ()V
	public final fun requestPermission ()V
	protected abstract fun requestPermissionDidStart ()V
	public final fun startMonitoring-LRDsOJo (J)V
	public final fun stopMonitoring ()V
}

public final class com/splendo/kaluga/permissions/base/BasePermissionManager$Settings {
	public fun <init> ()V
	public fun <init> (Lcom/splendo/kaluga/logging/Logger;)V
	public synthetic fun <init> (Lcom/splendo/kaluga/logging/Logger;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lcom/splendo/kaluga/logging/Logger;
	public final fun copy (Lcom/splendo/kaluga/logging/Logger;)Lcom/splendo/kaluga/permissions/base/BasePermissionManager$Settings;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/permissions/base/BasePermissionManager$Settings;Lcom/splendo/kaluga/logging/Logger;ILjava/lang/Object;)Lcom/splendo/kaluga/permissions/base/BasePermissionManager$Settings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLogger ()Lcom/splendo/kaluga/logging/Logger;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/permissions/base/BasePermissionStateRepo : com/splendo/kaluga/base/state/ColdStateFlowRepo {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/CoroutineContext;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/CoroutineContext;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public abstract interface class com/splendo/kaluga/permissions/base/BasePermissionsBuilder {
}

public final class com/splendo/kaluga/permissions/base/DefaultAndroidPermissionStateHandler : com/splendo/kaluga/permissions/base/AndroidPermissionStateHandler {
	public fun <init> (Lkotlinx/coroutines/channels/SendChannel;Ljava/lang/String;Lcom/splendo/kaluga/logging/Logger;)V
	public fun status (Lcom/splendo/kaluga/permissions/base/AndroidPermissionState;)V
}

public abstract class com/splendo/kaluga/permissions/base/Permission {
	public fun <init> ()V
	public abstract fun getName ()Ljava/lang/String;
}

public final class com/splendo/kaluga/permissions/base/PermissionContext {
	public fun <init> (Landroid/content/Context;)V
	public final fun component1 ()Landroid/content/Context;
	public final fun copy (Landroid/content/Context;)Lcom/splendo/kaluga/permissions/base/PermissionContext;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/permissions/base/PermissionContext;Landroid/content/Context;ILjava/lang/Object;)Lcom/splendo/kaluga/permissions/base/PermissionContext;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getContext ()Landroid/content/Context;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/permissions/base/PermissionContextKt {
	public static final fun getDefaultPermissionContext ()Lcom/splendo/kaluga/permissions/base/PermissionContext;
}

public abstract interface class com/splendo/kaluga/permissions/base/PermissionManager {
	public abstract fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getPermission ()Lcom/splendo/kaluga/permissions/base/Permission;
	public abstract fun requestPermission ()V
	public abstract fun startMonitoring-LRDsOJo (J)V
	public abstract fun stopMonitoring ()V
}

public abstract class com/splendo/kaluga/permissions/base/PermissionManager$Event {
}

public final class com/splendo/kaluga/permissions/base/PermissionManager$Event$PermissionDenied : com/splendo/kaluga/permissions/base/PermissionManager$Event {
	public fun <init> (Z)V
	public final fun component1 ()Z
	public final fun copy (Z)Lcom/splendo/kaluga/permissions/base/PermissionManager$Event$PermissionDenied;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/permissions/base/PermissionManager$Event$PermissionDenied;ZILjava/lang/Object;)Lcom/splendo/kaluga/permissions/base/PermissionManager$Event$PermissionDenied;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLocked ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/permissions/base/PermissionManager$Event$PermissionGranted : com/splendo/kaluga/permissions/base/PermissionManager$Event {
	public static final field INSTANCE Lcom/splendo/kaluga/permissions/base/PermissionManager$Event$PermissionGranted;
}

public abstract interface class com/splendo/kaluga/permissions/base/PermissionState : com/splendo/kaluga/base/state/KalugaState {
}

public abstract interface class com/splendo/kaluga/permissions/base/PermissionState$Active : com/splendo/kaluga/permissions/base/PermissionState {
	public abstract fun getDeinitialize ()Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/permissions/base/PermissionState$Active$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/permissions/base/PermissionState$Active;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/permissions/base/PermissionState$Allowed : com/splendo/kaluga/permissions/base/PermissionState$Initialized {
	public abstract fun deny (Z)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/permissions/base/PermissionState$Allowed$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/permissions/base/PermissionState$Allowed;)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/permissions/base/PermissionState$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/permissions/base/PermissionState;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/permissions/base/PermissionState$Deinitialized : com/splendo/kaluga/permissions/base/PermissionState$Inactive {
	public abstract fun getReinitialize ()Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/permissions/base/PermissionState$Deinitialized$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/permissions/base/PermissionState$Deinitialized;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/permissions/base/PermissionState$Denied : com/splendo/kaluga/permissions/base/PermissionState$Initialized {
	public abstract fun getAllow ()Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/permissions/base/PermissionState$Denied$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/permissions/base/PermissionState$Denied;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/permissions/base/PermissionState$Denied$Locked : com/splendo/kaluga/permissions/base/PermissionState$Denied {
	public abstract fun getUnlock ()Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/permissions/base/PermissionState$Denied$Locked$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/permissions/base/PermissionState$Denied$Locked;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/permissions/base/PermissionState$Denied$Requestable : com/splendo/kaluga/permissions/base/PermissionState$Denied {
	public abstract fun getLock ()Lkotlin/jvm/functions/Function1;
	public abstract fun request ()V
}

public final class com/splendo/kaluga/permissions/base/PermissionState$Denied$Requestable$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/permissions/base/PermissionState$Denied$Requestable;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/permissions/base/PermissionState$Inactive : com/splendo/kaluga/base/flow/SpecialFlowValue$NotImportant, com/splendo/kaluga/permissions/base/PermissionState {
}

public final class com/splendo/kaluga/permissions/base/PermissionState$Inactive$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/permissions/base/PermissionState$Inactive;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/permissions/base/PermissionState$Initialized : com/splendo/kaluga/permissions/base/PermissionState$Active {
}

public final class com/splendo/kaluga/permissions/base/PermissionState$Initialized$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/permissions/base/PermissionState$Initialized;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/permissions/base/PermissionState$Initializing : com/splendo/kaluga/base/flow/SpecialFlowValue$NotImportant, com/splendo/kaluga/permissions/base/PermissionState$Active {
	public abstract fun initialize (ZZ)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/permissions/base/PermissionState$Initializing$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/permissions/base/PermissionState$Initializing;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/permissions/base/PermissionState$Uninitialized : com/splendo/kaluga/permissions/base/PermissionState$Inactive {
}

public final class com/splendo/kaluga/permissions/base/PermissionState$Uninitialized$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/permissions/base/PermissionState$Uninitialized;)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/permissions/base/PermissionStateKt {
	public static final fun request (Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class com/splendo/kaluga/permissions/base/PermissionStateRepo : com/splendo/kaluga/permissions/base/BasePermissionStateRepo {
	public static final field Companion Lcom/splendo/kaluga/permissions/base/PermissionStateRepo$Companion;
	public synthetic fun <init> (JLkotlin/jvm/functions/Function1;Lkotlin/coroutines/CoroutineContext;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (JLkotlin/jvm/functions/Function1;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	protected final fun getMonitoringInterval-UwyO8pc ()J
}

public final class com/splendo/kaluga/permissions/base/PermissionStateRepo$Companion {
	public final fun getDefaultMonitoringInterval-UwyO8pc ()J
}

public abstract interface class com/splendo/kaluga/permissions/base/PermissionStateRepoBuilder {
	public abstract fun create (Lcom/splendo/kaluga/permissions/base/Permission;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/permissions/base/BasePermissionStateRepo;
}

public final class com/splendo/kaluga/permissions/base/Permissions {
	public fun <init> (Lcom/splendo/kaluga/permissions/base/PermissionsBuilder;Lkotlin/coroutines/CoroutineContext;)V
	public synthetic fun <init> (Lcom/splendo/kaluga/permissions/base/PermissionsBuilder;Lkotlin/coroutines/CoroutineContext;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun clean ()V
	public final fun get (Lcom/splendo/kaluga/permissions/base/Permission;)Lcom/splendo/kaluga/base/state/StateRepo;
	public final fun request (Lcom/splendo/kaluga/permissions/base/Permission;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/splendo/kaluga/permissions/base/PermissionsActivity : androidx/appcompat/app/AppCompatActivity {
	public static final field Companion Lcom/splendo/kaluga/permissions/base/PermissionsActivity$Companion;
	public static final field TAG Ljava/lang/String;
	public fun <init> ()V
	public fun onRequestPermissionsResult (I[Ljava/lang/String;[I)V
}

public final class com/splendo/kaluga/permissions/base/PermissionsActivity$Companion {
	public final fun intent (Landroid/content/Context;[Ljava/lang/String;)Landroid/content/Intent;
}

public class com/splendo/kaluga/permissions/base/PermissionsBuilder {
	public fun <init> ()V
	public fun <init> (Lcom/splendo/kaluga/permissions/base/PermissionContext;)V
	public synthetic fun <init> (Lcom/splendo/kaluga/permissions/base/PermissionContext;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun createPermissionStateRepo (Lcom/splendo/kaluga/permissions/base/Permission;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/permissions/base/BasePermissionStateRepo;
	public final fun get (Lcom/splendo/kaluga/permissions/base/Permission;)Lcom/splendo/kaluga/permissions/base/BasePermissionsBuilder;
	public final fun getContext ()Lcom/splendo/kaluga/permissions/base/PermissionContext;
	public final fun register (Lkotlin/reflect/KClass;Lcom/splendo/kaluga/permissions/base/BasePermissionsBuilder;)Lcom/splendo/kaluga/permissions/base/BasePermissionsBuilder;
	public final fun registerOrGet (Lkotlin/reflect/KClass;Lcom/splendo/kaluga/permissions/base/BasePermissionsBuilder;)Lcom/splendo/kaluga/permissions/base/BasePermissionsBuilder;
	public final fun registerOrGetPermissionStateRepoBuilder (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function2;)Lcom/splendo/kaluga/permissions/base/PermissionStateRepoBuilder;
	public final fun registerPermissionStateRepoBuilder (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function2;)V
	public final fun unregister (Lcom/splendo/kaluga/permissions/base/Permission;)V
	public final fun unregisterPermissionStateRepoBuilder (Lcom/splendo/kaluga/permissions/base/Permission;)V
}

public final class com/splendo/kaluga/permissions/base/PermissionsBuilderError : java/lang/Error {
	public fun <init> (Ljava/lang/String;)V
}

