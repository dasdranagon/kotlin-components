public abstract class com/splendo/kaluga/bluetooth/Attribute : kotlinx/coroutines/flow/Flow {
	public fun <init> ([BLkotlin/jvm/functions/Function1;Ljava/lang/String;Lcom/splendo/kaluga/logging/Logger;)V
	public synthetic fun <init> ([BLkotlin/jvm/functions/Function1;Ljava/lang/String;Lcom/splendo/kaluga/logging/Logger;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	protected final fun addAction (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;)V
	public fun collect (Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected final fun getLogTag ()Ljava/lang/String;
	public abstract fun getUuid ()Lcom/splendo/kaluga/bluetooth/UUID;
	public final fun readValue ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction$Read;
	public fun updateValue ()V
	public final fun writeValue ([B)Lcom/splendo/kaluga/bluetooth/device/DeviceAction$Write;
}

public abstract interface class com/splendo/kaluga/bluetooth/BaseBluetoothBuilder {
	public abstract fun create (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/bluetooth/Bluetooth;
}

public final class com/splendo/kaluga/bluetooth/BaseBluetoothBuilder$DefaultImpls {
	public static synthetic fun create$default (Lcom/splendo/kaluga/bluetooth/BaseBluetoothBuilder;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/Bluetooth;
}

public final class com/splendo/kaluga/bluetooth/Bluetooth : com/splendo/kaluga/bluetooth/BluetoothService, kotlinx/coroutines/CoroutineScope {
	public fun <init> (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function1;)V
	public fun allDevices ()Lkotlinx/coroutines/flow/Flow;
	public fun devices ()Lkotlinx/coroutines/flow/Flow;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun isEnabled ()Lkotlinx/coroutines/flow/Flow;
	public fun isScanning (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun pairedDevices (Ljava/util/Set;ZLcom/splendo/kaluga/bluetooth/device/ConnectionSettings;)Lkotlinx/coroutines/flow/Flow;
	public fun scannedDevices (Ljava/util/Set;)Lkotlinx/coroutines/flow/Flow;
	public fun startScanning (Ljava/util/Set;Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;)V
	public fun stopScanning (Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;)V
}

public final class com/splendo/kaluga/bluetooth/BluetoothBuilder : com/splendo/kaluga/bluetooth/BaseBluetoothBuilder {
	public fun <init> ()V
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function2;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun create (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/bluetooth/Bluetooth;
}

public final class com/splendo/kaluga/bluetooth/BluetoothKt {
	public static final fun advertisement (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun characteristics (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun connect (Lkotlinx/coroutines/flow/Flow;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun connect$default (Lkotlinx/coroutines/flow/Flow;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun descriptors (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun disconnect (Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun distance (Lkotlinx/coroutines/flow/Flow;DI)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun distance$default (Lkotlinx/coroutines/flow/Flow;DIILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static final fun get (Lkotlinx/coroutines/flow/Flow;Lcom/splendo/kaluga/bluetooth/UUID;)Lkotlinx/coroutines/flow/Flow;
	public static final fun getAttribute (Lkotlinx/coroutines/flow/Flow;Lcom/splendo/kaluga/bluetooth/UUID;)Lkotlinx/coroutines/flow/Flow;
	public static final fun getService (Lkotlinx/coroutines/flow/Flow;Lcom/splendo/kaluga/bluetooth/UUID;)Lkotlinx/coroutines/flow/Flow;
	public static final fun info (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun mtu (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun requestMtu (Lkotlinx/coroutines/flow/Flow;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun rssi (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun services (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun state (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun updateRssi (Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun value (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
}

public abstract interface class com/splendo/kaluga/bluetooth/BluetoothMonitor : com/splendo/kaluga/service/ServiceMonitor {
}

public final class com/splendo/kaluga/bluetooth/BluetoothMonitor$Builder {
	public fun <init> ()V
	public final fun create ()Lcom/splendo/kaluga/bluetooth/BluetoothMonitor;
}

public abstract interface class com/splendo/kaluga/bluetooth/BluetoothService {
	public abstract fun allDevices ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun devices ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun isEnabled ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun isScanning (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun pairedDevices (Ljava/util/Set;ZLcom/splendo/kaluga/bluetooth/device/ConnectionSettings;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun scannedDevices (Ljava/util/Set;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun startScanning (Ljava/util/Set;Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;)V
	public abstract fun stopScanning (Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;)V
}

public final class com/splendo/kaluga/bluetooth/BluetoothService$CleanMode : java/lang/Enum {
	public static final field ONLY_PROVIDED_FILTER Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;
	public static final field REMOVE_ALL Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;
	public static final field RETAIN_ALL Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;
	public static fun values ()[Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;
}

public final class com/splendo/kaluga/bluetooth/BluetoothService$DefaultImpls {
	public static synthetic fun pairedDevices$default (Lcom/splendo/kaluga/bluetooth/BluetoothService;Ljava/util/Set;ZLcom/splendo/kaluga/bluetooth/device/ConnectionSettings;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun scannedDevices$default (Lcom/splendo/kaluga/bluetooth/BluetoothService;Ljava/util/Set;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun startScanning$default (Lcom/splendo/kaluga/bluetooth/BluetoothService;Ljava/util/Set;Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;ILjava/lang/Object;)V
	public static synthetic fun stopScanning$default (Lcom/splendo/kaluga/bluetooth/BluetoothService;Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;ILjava/lang/Object;)V
}

public class com/splendo/kaluga/bluetooth/Characteristic : com/splendo/kaluga/bluetooth/Attribute {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/CharacteristicWrapper;[BLkotlin/jvm/functions/Function1;Ljava/lang/String;Lcom/splendo/kaluga/logging/Logger;)V
	public synthetic fun <init> (Lcom/splendo/kaluga/bluetooth/CharacteristicWrapper;[BLkotlin/jvm/functions/Function1;Ljava/lang/String;Lcom/splendo/kaluga/logging/Logger;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun createReadAction$bluetooth ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction$Read;
	public synthetic fun createWriteAction$bluetooth ([B)Lcom/splendo/kaluga/bluetooth/device/DeviceAction$Write;
	public final fun disableNotification (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun enableNotification (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getDescriptors ()Ljava/util/List;
	public fun getUuid ()Lcom/splendo/kaluga/bluetooth/UUID;
	public final fun getWrapper ()Lcom/splendo/kaluga/bluetooth/CharacteristicWrapper;
	public final fun hasProperty (Lcom/splendo/kaluga/bluetooth/CharacteristicProperties;)Z
	public final fun isNotifying ()Z
	public final fun setNotifying (Z)V
}

public final class com/splendo/kaluga/bluetooth/CharacteristicKt {
	public static final fun containsAnyOf (Lcom/splendo/kaluga/bluetooth/CharacteristicWrapper;[I)Z
}

public abstract class com/splendo/kaluga/bluetooth/CharacteristicProperties {
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getRawValue ()I
	public final fun or (Lcom/splendo/kaluga/bluetooth/CharacteristicProperties;)I
}

public final class com/splendo/kaluga/bluetooth/CharacteristicProperties$Broadcast : com/splendo/kaluga/bluetooth/CharacteristicProperties {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/CharacteristicProperties$Broadcast;
}

public final class com/splendo/kaluga/bluetooth/CharacteristicProperties$ExtendedProperties : com/splendo/kaluga/bluetooth/CharacteristicProperties {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/CharacteristicProperties$ExtendedProperties;
}

public final class com/splendo/kaluga/bluetooth/CharacteristicProperties$Indicate : com/splendo/kaluga/bluetooth/CharacteristicProperties {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/CharacteristicProperties$Indicate;
}

public final class com/splendo/kaluga/bluetooth/CharacteristicProperties$Notify : com/splendo/kaluga/bluetooth/CharacteristicProperties {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/CharacteristicProperties$Notify;
}

public final class com/splendo/kaluga/bluetooth/CharacteristicProperties$Read : com/splendo/kaluga/bluetooth/CharacteristicProperties {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/CharacteristicProperties$Read;
}

public final class com/splendo/kaluga/bluetooth/CharacteristicProperties$SignedWrite : com/splendo/kaluga/bluetooth/CharacteristicProperties {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/CharacteristicProperties$SignedWrite;
}

public final class com/splendo/kaluga/bluetooth/CharacteristicProperties$Write : com/splendo/kaluga/bluetooth/CharacteristicProperties {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/CharacteristicProperties$Write;
}

public final class com/splendo/kaluga/bluetooth/CharacteristicProperties$WriteWithoutResponse : com/splendo/kaluga/bluetooth/CharacteristicProperties {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/CharacteristicProperties$WriteWithoutResponse;
}

public abstract interface class com/splendo/kaluga/bluetooth/CharacteristicWrapper {
	public abstract fun getDescriptors ()Ljava/util/List;
	public abstract fun getProperties ()I
	public abstract fun getUuid ()Lcom/splendo/kaluga/bluetooth/UUID;
	public abstract fun getValue ()[B
}

public final class com/splendo/kaluga/bluetooth/CommonUUID {
	public static final fun uuidFrom (Ljava/lang/String;)Lcom/splendo/kaluga/bluetooth/UUID;
}

public final class com/splendo/kaluga/bluetooth/DefaultBluetoothMonitor : com/splendo/kaluga/service/DefaultServiceMonitor, com/splendo/kaluga/bluetooth/BluetoothMonitor {
	public fun <init> ()V
	public fun isServiceEnabled ()Z
}

public class com/splendo/kaluga/bluetooth/Descriptor : com/splendo/kaluga/bluetooth/Attribute {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/DescriptorWrapper;[BLkotlin/jvm/functions/Function1;Ljava/lang/String;Lcom/splendo/kaluga/logging/Logger;)V
	public synthetic fun <init> (Lcom/splendo/kaluga/bluetooth/DescriptorWrapper;[BLkotlin/jvm/functions/Function1;Ljava/lang/String;Lcom/splendo/kaluga/logging/Logger;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun createReadAction$bluetooth ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction$Read;
	public synthetic fun createWriteAction$bluetooth ([B)Lcom/splendo/kaluga/bluetooth/device/DeviceAction$Write;
	public fun getUuid ()Lcom/splendo/kaluga/bluetooth/UUID;
	public final fun getWrapper ()Lcom/splendo/kaluga/bluetooth/DescriptorWrapper;
}

public abstract interface class com/splendo/kaluga/bluetooth/DescriptorWrapper {
	public abstract fun getUuid ()Lcom/splendo/kaluga/bluetooth/UUID;
	public abstract fun getValue ()[B
}

public final class com/splendo/kaluga/bluetooth/Service {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/ServiceWrapper;Lkotlin/jvm/functions/Function1;Ljava/lang/String;Lcom/splendo/kaluga/logging/Logger;)V
	public final fun getCharacteristics ()Ljava/util/List;
	public final fun getUuid ()Lcom/splendo/kaluga/bluetooth/UUID;
}

public abstract interface class com/splendo/kaluga/bluetooth/ServiceWrapper {
	public abstract fun getCharacteristics ()Ljava/util/List;
	public abstract fun getUuid ()Lcom/splendo/kaluga/bluetooth/UUID;
}

public final class com/splendo/kaluga/bluetooth/UUID {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lcom/splendo/kaluga/bluetooth/UUID;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/UUID;Ljava/lang/String;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/UUID;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getUuidString ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/bluetooth/UUIDException : java/lang/Exception {
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class com/splendo/kaluga/bluetooth/UUIDException$InvalidFormat : com/splendo/kaluga/bluetooth/UUIDException {
	public fun <init> (Ljava/lang/String;)V
}

public final class com/splendo/kaluga/bluetooth/UUIDKt {
	public static final fun getUuidString (Lcom/splendo/kaluga/bluetooth/UUID;)Ljava/lang/String;
	public static final fun randomUUID ()Lcom/splendo/kaluga/bluetooth/UUID;
}

public final class com/splendo/kaluga/bluetooth/ValueKt {
	public static final fun getAsBytes ([B)[B
}

public final class com/splendo/kaluga/bluetooth/device/AdvertisementData : com/splendo/kaluga/bluetooth/device/BaseAdvertisementData {
	public fun <init> ()V
	public fun getManufacturerData ()[B
	public fun getManufacturerId ()Ljava/lang/Integer;
	public fun getName ()Ljava/lang/String;
	public fun getServiceData ()Ljava/util/Map;
	public fun getServiceUUIDs ()Ljava/util/List;
	public fun getTxPowerLevel ()I
	public fun isConnectable ()Z
}

public final class com/splendo/kaluga/bluetooth/device/AdvertisementDataKt {
	public static final fun getDescription (Lcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;)Ljava/lang/String;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/BaseAdvertisementData {
	public abstract fun getManufacturerData ()[B
	public abstract fun getManufacturerId ()Ljava/lang/Integer;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getServiceData ()Ljava/util/Map;
	public abstract fun getServiceUUIDs ()Ljava/util/List;
	public abstract fun getTxPowerLevel ()I
	public abstract fun isConnectable ()Z
}

public abstract class com/splendo/kaluga/bluetooth/device/BaseConnectableDeviceStateRepo : com/splendo/kaluga/base/state/HotStateFlowRepo {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/CoroutineContext;)V
}

public abstract class com/splendo/kaluga/bluetooth/device/BaseDeviceConnectionManager : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager, kotlinx/coroutines/CoroutineScope {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/device/DeviceWrapper;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lkotlinx/coroutines/CoroutineScope;)V
	public final fun cancelConnecting ()V
	protected fun createService (Lcom/splendo/kaluga/bluetooth/ServiceWrapper;)Lcom/splendo/kaluga/bluetooth/Service;
	protected abstract fun didStartPerformingAction (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	protected final fun getCurrentAction ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction;
	protected final fun getDeviceWrapper ()Lcom/splendo/kaluga/bluetooth/device/DeviceWrapper;
	public fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	protected final fun getNotifyingCharacteristics ()Lcom/splendo/kaluga/base/collections/ConcurrentMutableMap;
	public synthetic fun getRssi ()Lkotlinx/coroutines/flow/Flow;
	public fun getRssi ()Lkotlinx/coroutines/flow/SharedFlow;
	public final fun handleConnect ()V
	protected fun handleCurrentActionCompleted (Z)V
	public final fun handleDisconnect (Lkotlin/jvm/functions/Function1;)V
	protected fun handleDiscoverCompleted (Ljava/util/List;)V
	protected final fun handleNewMtu (I)V
	protected fun handleNewRssi (I)V
	protected fun handleUpdatedCharacteristic (Lcom/splendo/kaluga/bluetooth/UUID;ZLkotlin/jvm/functions/Function1;)V
	public static synthetic fun handleUpdatedCharacteristic$default (Lcom/splendo/kaluga/bluetooth/device/BaseDeviceConnectionManager;Lcom/splendo/kaluga/bluetooth/UUID;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	protected fun handleUpdatedDescriptor (Lcom/splendo/kaluga/bluetooth/UUID;ZLkotlin/jvm/functions/Function1;)V
	public static synthetic fun handleUpdatedDescriptor$default (Lcom/splendo/kaluga/bluetooth/device/BaseDeviceConnectionManager;Lcom/splendo/kaluga/bluetooth/UUID;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public final fun pair (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun performAction (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun readRssi (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected abstract fun requestStartPairing (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected abstract fun requestStartUnpairing (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun reset (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected final fun setCurrentAction (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;)V
	public final fun startConnecting (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;)V
	public final fun startDisconnecting ()V
	public final fun startDiscovering ()V
	public final fun unpair (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState : com/splendo/kaluga/base/state/KalugaState, com/splendo/kaluga/bluetooth/device/DeviceState {
	public abstract fun getDidDisconnect ()Lkotlin/jvm/functions/Function1;
	public abstract fun getDisconnecting ()Lkotlin/jvm/functions/Function1;
	public abstract fun unpair (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState {
	public abstract fun didUpdateMtu (I)Lkotlin/jvm/functions/Function1;
	public abstract fun getMtu ()Ljava/lang/Integer;
	public abstract fun getReconnect ()Lkotlin/jvm/functions/Function1;
	public abstract fun getReconnectionSettings ()Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;
	public abstract fun pair (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun readRssi (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun requestMtu (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun startDisconnected ()V
	public abstract fun updateReconnectionSettings (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$DiscoveredServices : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected {
	public abstract fun getServices ()Ljava/util/List;
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$DiscoveredServices$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$DiscoveredServices;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$Discovering : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected {
	public abstract fun didDiscoverServices (Ljava/util/List;)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$Discovering$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$Discovering;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$HandlingAction : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$DiscoveredServices {
	public abstract fun addAction (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;)Lkotlin/jvm/functions/Function1;
	public abstract fun getAction ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction;
	public abstract fun getActionCompleted ()Lkotlin/jvm/functions/Function1;
	public abstract fun getNextActions ()Ljava/util/List;
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$HandlingAction$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$HandlingAction;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$Idle : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$DiscoveredServices {
	public abstract fun handleAction (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$Idle$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$Idle;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$NoServices : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected {
	public abstract fun getDiscoverServices ()Lkotlin/jvm/functions/Function1;
	public abstract fun startDiscovering ()V
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$NoServices$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$NoServices;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connecting : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState {
	public abstract fun getCancelConnection ()Lkotlin/jvm/functions/Function1;
	public abstract fun getDidConnect ()Lkotlin/jvm/functions/Function1;
	public abstract fun handleCancel ()V
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connecting$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connecting;)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceState;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Disconnected : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState {
	public abstract fun connect (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;)Lkotlin/jvm/functions/Function1;
	public abstract fun startConnecting (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;)V
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Disconnected$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Disconnected;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Disconnecting : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState {
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Disconnecting$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Disconnecting;)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImplRepo : com/splendo/kaluga/bluetooth/device/BaseConnectableDeviceStateRepo {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;Lkotlin/coroutines/CoroutineContext;)V
}

public final class com/splendo/kaluga/bluetooth/device/ConnectionSettings {
	public fun <init> ()V
	public fun <init> (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;Lcom/splendo/kaluga/logging/Logger;)V
	public synthetic fun <init> (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;Lcom/splendo/kaluga/logging/Logger;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;
	public final fun component2 ()Lcom/splendo/kaluga/logging/Logger;
	public final fun copy (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;Lcom/splendo/kaluga/logging/Logger;)Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;Lcom/splendo/kaluga/logging/Logger;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLogger ()Lcom/splendo/kaluga/logging/Logger;
	public final fun getReconnectionSettings ()Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings {
}

public final class com/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings$Always : com/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings$Always;
}

public final class com/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings$Never : com/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings$Never;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/Device {
	public abstract fun advertisementDataDidUpdate (Lcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;)V
	public abstract fun connect (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun disconnect (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getIdentifier ()Lcom/splendo/kaluga/bluetooth/UUID;
	public abstract fun getInfo ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getState ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun handleConnected ()V
	public abstract fun handleDisconnected ()V
	public abstract fun rssiDidUpdate (I)V
}

public final class com/splendo/kaluga/bluetooth/device/Device$DefaultImpls {
	public static fun connect (Lcom/splendo/kaluga/bluetooth/device/Device;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun connect$default (Lcom/splendo/kaluga/bluetooth/device/Device;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun disconnect (Lcom/splendo/kaluga/bluetooth/device/Device;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class com/splendo/kaluga/bluetooth/device/DeviceAction {
	public final fun getCompletedSuccessfully ()Lkotlinx/coroutines/CompletableDeferred;
}

public abstract class com/splendo/kaluga/bluetooth/device/DeviceAction$Notification : com/splendo/kaluga/bluetooth/device/DeviceAction {
	public synthetic fun <init> (Lcom/splendo/kaluga/bluetooth/Characteristic;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCharacteristic ()Lcom/splendo/kaluga/bluetooth/Characteristic;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceAction$Notification$Disable : com/splendo/kaluga/bluetooth/device/DeviceAction$Notification {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/Characteristic;)V
}

public final class com/splendo/kaluga/bluetooth/device/DeviceAction$Notification$Enable : com/splendo/kaluga/bluetooth/device/DeviceAction$Notification {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/Characteristic;)V
}

public abstract class com/splendo/kaluga/bluetooth/device/DeviceAction$Read : com/splendo/kaluga/bluetooth/device/DeviceAction {
}

public final class com/splendo/kaluga/bluetooth/device/DeviceAction$Read$Characteristic : com/splendo/kaluga/bluetooth/device/DeviceAction$Read {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/Characteristic;)V
	public final fun getCharacteristic ()Lcom/splendo/kaluga/bluetooth/Characteristic;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceAction$Read$Descriptor : com/splendo/kaluga/bluetooth/device/DeviceAction$Read {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/Descriptor;)V
	public final fun getDescriptor ()Lcom/splendo/kaluga/bluetooth/Descriptor;
}

public abstract class com/splendo/kaluga/bluetooth/device/DeviceAction$Write : com/splendo/kaluga/bluetooth/device/DeviceAction {
	public synthetic fun <init> ([BLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getNewValue ()[B
}

public final class com/splendo/kaluga/bluetooth/device/DeviceAction$Write$Characteristic : com/splendo/kaluga/bluetooth/device/DeviceAction$Write {
	public fun <init> ([BLcom/splendo/kaluga/bluetooth/Characteristic;)V
	public final fun getCharacteristic ()Lcom/splendo/kaluga/bluetooth/Characteristic;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceAction$Write$Descriptor : com/splendo/kaluga/bluetooth/device/DeviceAction$Write {
	public fun <init> ([BLcom/splendo/kaluga/bluetooth/Descriptor;)V
	public final fun getDescriptor ()Lcom/splendo/kaluga/bluetooth/Descriptor;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager {
	public abstract fun cancelConnecting ()V
	public abstract fun connect ()V
	public abstract fun disconnect ()V
	public abstract fun discoverServices (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getCurrentState ()Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$State;
	public abstract fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getRssi ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun handleConnect ()V
	public abstract fun handleDisconnect (Lkotlin/jvm/functions/Function1;)V
	public abstract fun pair (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun performAction (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun readRssi (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun requestMtu (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun reset (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun startConnecting (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;)V
	public abstract fun startDisconnecting ()V
	public abstract fun startDiscovering ()V
	public abstract fun unpair (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Builder {
	public abstract fun create (Lcom/splendo/kaluga/bluetooth/device/DeviceWrapper;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lkotlinx/coroutines/CoroutineScope;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$DefaultImpls {
	public static synthetic fun handleDisconnect$default (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun startConnecting$default (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;ILjava/lang/Object;)V
}

public abstract class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$AddAction : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;)V
	public final fun component1 ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction;
	public final fun copy (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$AddAction;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$AddAction;Lcom/splendo/kaluga/bluetooth/device/DeviceAction;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$AddAction;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAction ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$CancelledConnecting : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$CancelledConnecting;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$CompletedAction : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;Z)V
	public final fun component1 ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction;
	public final fun component2 ()Z
	public final fun copy (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;Z)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$CompletedAction;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$CompletedAction;Lcom/splendo/kaluga/bluetooth/device/DeviceAction;ZILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$CompletedAction;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAction ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction;
	public final fun getSucceeded ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Connected : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Connected;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Connecting : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;)V
	public final fun component1 ()Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;
	public final fun copy (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Connecting;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Connecting;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Connecting;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getReconnectionSettings ()Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Disconnected : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final fun component1 ()Lkotlin/jvm/functions/Function1;
	public final fun copy (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Disconnected;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Disconnected;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Disconnected;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getOnDisconnect ()Lkotlin/jvm/functions/Function1;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Disconnecting : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Disconnecting;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$DiscoveredServices : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$DiscoveredServices;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$DiscoveredServices;Ljava/util/List;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$DiscoveredServices;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getServices ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Discovering : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Discovering;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$MtuUpdated : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public fun <init> (I)V
	public final fun component1 ()I
	public final fun copy (I)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$MtuUpdated;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$MtuUpdated;IILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$MtuUpdated;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getNewMtu ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$State : java/lang/Enum {
	public static final field CONNECTED Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$State;
	public static final field CONNECTING Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$State;
	public static final field DISCONNECTED Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$State;
	public static final field DISCONNECTING Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$State;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$State;
	public static fun values ()[Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$State;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceImpl : com/splendo/kaluga/bluetooth/device/Device, kotlinx/coroutines/CoroutineScope {
	public static final field Companion Lcom/splendo/kaluga/bluetooth/device/DeviceImpl$Companion;
	public static final field TAG Ljava/lang/String;
	public fun <init> (Lcom/splendo/kaluga/bluetooth/UUID;Lcom/splendo/kaluga/bluetooth/device/DeviceInfoImpl;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lkotlin/jvm/functions/Function1;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)V
	public synthetic fun <init> (Lcom/splendo/kaluga/bluetooth/UUID;Lcom/splendo/kaluga/bluetooth/device/DeviceInfoImpl;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lkotlin/jvm/functions/Function1;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun advertisementDataDidUpdate (Lcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;)V
	public fun connect (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun disconnect (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getIdentifier ()Lcom/splendo/kaluga/bluetooth/UUID;
	public fun getInfo ()Lkotlinx/coroutines/flow/Flow;
	public fun getState ()Lkotlinx/coroutines/flow/Flow;
	public fun handleConnected ()V
	public fun handleDisconnected ()V
	public fun rssiDidUpdate (I)V
}

public final class com/splendo/kaluga/bluetooth/device/DeviceImpl$Companion {
}

public abstract interface class com/splendo/kaluga/bluetooth/device/DeviceInfo {
	public abstract fun distance (D)D
	public abstract fun getAdvertisementData ()Lcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;
	public abstract fun getIdentifier ()Lcom/splendo/kaluga/bluetooth/UUID;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getRssi ()I
	public abstract fun getUpdatedAt ()Lcom/splendo/kaluga/base/utils/KalugaDate;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceInfo$DefaultImpls {
	public static fun distance (Lcom/splendo/kaluga/bluetooth/device/DeviceInfo;D)D
	public static synthetic fun distance$default (Lcom/splendo/kaluga/bluetooth/device/DeviceInfo;DILjava/lang/Object;)D
}

public final class com/splendo/kaluga/bluetooth/device/DeviceInfoImpl : com/splendo/kaluga/bluetooth/device/DeviceInfo {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/device/DeviceWrapper;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;)V
	public fun <init> (Ljava/lang/String;Lcom/splendo/kaluga/bluetooth/UUID;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lcom/splendo/kaluga/bluetooth/UUID;
	public final fun component3 ()I
	public final fun component4 ()Lcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;
	public final fun copy (Ljava/lang/String;Lcom/splendo/kaluga/bluetooth/UUID;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;)Lcom/splendo/kaluga/bluetooth/device/DeviceInfoImpl;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/DeviceInfoImpl;Ljava/lang/String;Lcom/splendo/kaluga/bluetooth/UUID;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/DeviceInfoImpl;
	public fun distance (D)D
	public fun equals (Ljava/lang/Object;)Z
	public fun getAdvertisementData ()Lcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;
	public fun getIdentifier ()Lcom/splendo/kaluga/bluetooth/UUID;
	public fun getName ()Ljava/lang/String;
	public fun getRssi ()I
	public fun getUpdatedAt ()Lcom/splendo/kaluga/base/utils/KalugaDate;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceInfoJVM {
	public static final fun getStringValue (Lcom/splendo/kaluga/bluetooth/UUID;)Ljava/lang/String;
	public static final fun identifierFromString (Ljava/lang/String;)Lcom/splendo/kaluga/bluetooth/UUID;
	public static final fun randomIdentifier ()Lcom/splendo/kaluga/bluetooth/UUID;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceInfoKt {
	public static final fun getSerializable (Lcom/splendo/kaluga/bluetooth/UUID;)Lcom/splendo/kaluga/bluetooth/device/SerializableIdentifier;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/DeviceState {
}

public abstract interface class com/splendo/kaluga/bluetooth/device/DeviceWrapper {
	public abstract fun getIdentifier ()Lcom/splendo/kaluga/bluetooth/UUID;
	public abstract fun getName ()Ljava/lang/String;
}

public class com/splendo/kaluga/bluetooth/device/IdentifierSerializer : kotlinx/serialization/KSerializer {
	public fun <init> ()V
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcom/splendo/kaluga/bluetooth/device/SerializableIdentifier;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcom/splendo/kaluga/bluetooth/device/SerializableIdentifier;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public abstract interface class com/splendo/kaluga/bluetooth/device/NotConnectableDeviceState : com/splendo/kaluga/bluetooth/device/DeviceState {
}

public final class com/splendo/kaluga/bluetooth/device/SerializableIdentifier {
	public static final field Companion Lcom/splendo/kaluga/bluetooth/device/SerializableIdentifier$Companion;
	public fun <init> (Lcom/splendo/kaluga/bluetooth/UUID;)V
	public final fun component1 ()Lcom/splendo/kaluga/bluetooth/UUID;
	public final fun copy (Lcom/splendo/kaluga/bluetooth/UUID;)Lcom/splendo/kaluga/bluetooth/device/SerializableIdentifier;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/SerializableIdentifier;Lcom/splendo/kaluga/bluetooth/UUID;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/SerializableIdentifier;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIdentifier ()Lcom/splendo/kaluga/bluetooth/UUID;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/SerializableIdentifier$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class com/splendo/kaluga/bluetooth/scanner/BaseScanner : com/splendo/kaluga/bluetooth/scanner/Scanner, kotlinx/coroutines/CoroutineScope {
	public static final field Companion Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Companion;
	public fun <init> (Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Settings;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/CoroutineDispatcher;)V
	public synthetic fun <init> (Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Settings;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/CoroutineDispatcher;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun cancelRetrievingPairedDevices ()V
	protected abstract fun didStartScanning (Ljava/util/Set;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected abstract fun didStopScanning (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected abstract fun generateEnableSensorsActions ()Ljava/util/List;
	protected abstract fun getBluetoothEnabledMonitor ()Lcom/splendo/kaluga/bluetooth/BluetoothMonitor;
	protected final fun getBluetoothPermissionRepo ()Lcom/splendo/kaluga/base/state/StateRepo;
	public fun getConnectionEvents ()Lkotlinx/coroutines/flow/Flow;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	protected final fun getDeviceBuilder (Lcom/splendo/kaluga/bluetooth/device/DeviceWrapper;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Builder;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;)Lkotlin/jvm/functions/Function1;
	public fun getDiscoveryEvents ()Lkotlinx/coroutines/flow/Flow;
	protected fun getEnabledFlow ()Lkotlinx/coroutines/flow/Flow;
	protected final fun getEventChannel ()Lkotlinx/coroutines/channels/Channel;
	public fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	protected fun getPermissionsFlow ()Lkotlinx/coroutines/flow/Flow;
	protected fun handleDeviceDiscovered (Lcom/splendo/kaluga/bluetooth/device/DeviceWrapper;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;Lkotlin/jvm/functions/Function1;)V
	public fun isHardwareEnabled (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun requestEnableHardware (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected abstract fun retrievePairedDeviceDiscoveredEvents (Ljava/util/Set;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun retrievePairedDevices (Ljava/util/Set;ZLcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun scanForDevices (Ljava/util/Set;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun startMonitoringHardwareEnabled (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun startMonitoringPermissions (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun stopMonitoringHardwareEnabled (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun stopMonitoringPermissions (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun stopScanning (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/BaseScanner$Builder {
	public abstract fun create (Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Settings;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/CoroutineDispatcher;)Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner;
}

public final class com/splendo/kaluga/bluetooth/scanner/BaseScanner$Builder$DefaultImpls {
	public static synthetic fun create$default (Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Builder;Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Settings;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/CoroutineDispatcher;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner;
}

public final class com/splendo/kaluga/bluetooth/scanner/BaseScanner$Companion {
}

public final class com/splendo/kaluga/bluetooth/scanner/BaseScanner$Settings {
	public fun <init> (Lcom/splendo/kaluga/permissions/base/Permissions;ZZZLcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lcom/splendo/kaluga/logging/Logger;)V
	public synthetic fun <init> (Lcom/splendo/kaluga/permissions/base/Permissions;ZZZLcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lcom/splendo/kaluga/logging/Logger;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lcom/splendo/kaluga/permissions/base/Permissions;
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun component5 ()Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;
	public final fun component6 ()Lcom/splendo/kaluga/logging/Logger;
	public final fun copy (Lcom/splendo/kaluga/permissions/base/Permissions;ZZZLcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lcom/splendo/kaluga/logging/Logger;)Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Settings;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Settings;Lcom/splendo/kaluga/permissions/base/Permissions;ZZZLcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lcom/splendo/kaluga/logging/Logger;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Settings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAutoEnableSensors ()Z
	public final fun getAutoRequestPermission ()Z
	public final fun getDefaultConnectionSettings ()Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;
	public final fun getDiscoverBondedDevices ()Z
	public final fun getLogger ()Lcom/splendo/kaluga/logging/Logger;
	public final fun getPermissions ()Lcom/splendo/kaluga/permissions/base/Permissions;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/bluetooth/scanner/BaseScanningStateRepo : com/splendo/kaluga/base/state/ColdStateFlowRepo {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/CoroutineContext;)V
}

public final class com/splendo/kaluga/bluetooth/scanner/DefaultDevices : com/splendo/kaluga/bluetooth/scanner/ScanningState$Devices {
	public fun <init> (Ljava/util/Map;Ljava/util/Map;Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode$Scanning;)V
	public fun <init> (Ljava/util/Set;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun component2 ()Ljava/util/Map;
	public final fun component3 ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode$Scanning;
	public final fun copy (Ljava/util/Map;Ljava/util/Map;Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode$Scanning;)Lcom/splendo/kaluga/bluetooth/scanner/DefaultDevices;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/DefaultDevices;Ljava/util/Map;Ljava/util/Map;Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode$Scanning;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/DefaultDevices;
	public fun copyAndAddScanned (Lcom/splendo/kaluga/bluetooth/UUID;Lkotlin/jvm/functions/Function0;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public fun copyAndSetPaired (Ljava/util/Map;Ljava/util/Set;Z)Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public fun devicesForCurrentScanFilter ()Ljava/util/List;
	public fun devicesForDiscoveryMode (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode;)Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAllDevices ()Ljava/util/Map;
	public fun getCurrentScanFilter ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode$Scanning;
	public fun getIdentifiersForCurrentScanFilter ()Ljava/util/Set;
	public fun getIdentifiersFoundForDeviceDiscoveryMode ()Ljava/util/Map;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public fun updateScanFilter (Ljava/util/Set;Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
}

public final class com/splendo/kaluga/bluetooth/scanner/DefaultScanner : com/splendo/kaluga/bluetooth/scanner/BaseScanner {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Settings;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/CoroutineDispatcher;)V
	public synthetic fun <init> (Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Settings;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/CoroutineDispatcher;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun isSupported ()Z
}

public final class com/splendo/kaluga/bluetooth/scanner/DefaultScanner$Builder : com/splendo/kaluga/bluetooth/scanner/BaseScanner$Builder {
	public fun <init> ()V
	public fun create (Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Settings;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/CoroutineDispatcher;)Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/Scanner {
	public abstract fun cancelRetrievingPairedDevices ()V
	public abstract fun getConnectionEvents ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getDiscoveryEvents ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun isHardwareEnabled (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun isSupported ()Z
	public abstract fun requestEnableHardware (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun retrievePairedDevices (Ljava/util/Set;ZLcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun scanForDevices (Ljava/util/Set;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun startMonitoringHardwareEnabled (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun startMonitoringPermissions (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun stopMonitoringHardwareEnabled (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun stopMonitoringPermissions (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun stopScanning (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class com/splendo/kaluga/bluetooth/scanner/Scanner$ConnectionEvent {
}

public final class com/splendo/kaluga/bluetooth/scanner/Scanner$ConnectionEvent$DeviceConnected : com/splendo/kaluga/bluetooth/scanner/Scanner$ConnectionEvent {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/UUID;)V
	public final fun component1 ()Lcom/splendo/kaluga/bluetooth/UUID;
	public final fun copy (Lcom/splendo/kaluga/bluetooth/UUID;)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$ConnectionEvent$DeviceConnected;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/Scanner$ConnectionEvent$DeviceConnected;Lcom/splendo/kaluga/bluetooth/UUID;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$ConnectionEvent$DeviceConnected;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIdentifier ()Lcom/splendo/kaluga/bluetooth/UUID;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/scanner/Scanner$ConnectionEvent$DeviceDisconnected : com/splendo/kaluga/bluetooth/scanner/Scanner$ConnectionEvent {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/UUID;)V
	public final fun component1 ()Lcom/splendo/kaluga/bluetooth/UUID;
	public final fun copy (Lcom/splendo/kaluga/bluetooth/UUID;)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$ConnectionEvent$DeviceDisconnected;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/Scanner$ConnectionEvent$DeviceDisconnected;Lcom/splendo/kaluga/bluetooth/UUID;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$ConnectionEvent$DeviceDisconnected;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIdentifier ()Lcom/splendo/kaluga/bluetooth/UUID;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/scanner/Scanner$DeviceDiscovered {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/UUID;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;Lkotlin/jvm/functions/Function1;)V
	public final fun component1 ()Lcom/splendo/kaluga/bluetooth/UUID;
	public final fun component2 ()I
	public final fun component3 ()Lcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;
	public final fun component4 ()Lkotlin/jvm/functions/Function1;
	public final fun copy (Lcom/splendo/kaluga/bluetooth/UUID;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$DeviceDiscovered;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/Scanner$DeviceDiscovered;Lcom/splendo/kaluga/bluetooth/UUID;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$DeviceDiscovered;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAdvertisementData ()Lcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;
	public final fun getDeviceCreator ()Lkotlin/jvm/functions/Function1;
	public final fun getIdentifier ()Lcom/splendo/kaluga/bluetooth/UUID;
	public final fun getRssi ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/bluetooth/scanner/Scanner$Event {
}

public final class com/splendo/kaluga/bluetooth/scanner/Scanner$Event$BluetoothDisabled : com/splendo/kaluga/bluetooth/scanner/Scanner$Event {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$BluetoothDisabled;
}

public final class com/splendo/kaluga/bluetooth/scanner/Scanner$Event$BluetoothEnabled : com/splendo/kaluga/bluetooth/scanner/Scanner$Event {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$BluetoothEnabled;
}

public final class com/splendo/kaluga/bluetooth/scanner/Scanner$Event$FailedScanning : com/splendo/kaluga/bluetooth/scanner/Scanner$Event {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$FailedScanning;
}

public final class com/splendo/kaluga/bluetooth/scanner/Scanner$Event$PairedDevicesRetrieved : com/splendo/kaluga/bluetooth/scanner/Scanner$Event {
	public fun <init> (Ljava/util/List;Ljava/util/Set;Z)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/Set;
	public final fun component3 ()Z
	public final fun copy (Ljava/util/List;Ljava/util/Set;Z)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$PairedDevicesRetrieved;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$PairedDevicesRetrieved;Ljava/util/List;Ljava/util/Set;ZILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$PairedDevicesRetrieved;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDeviceCreators ()Ljava/util/List;
	public final fun getDevices ()Ljava/util/List;
	public final fun getFilter ()Ljava/util/Set;
	public final fun getIdentifiers ()Ljava/util/List;
	public final fun getRemoveForAllPairedFilters ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/scanner/Scanner$Event$PermissionChanged : com/splendo/kaluga/bluetooth/scanner/Scanner$Event {
	public fun <init> (Z)V
	public final fun component1 ()Z
	public final fun copy (Z)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$PermissionChanged;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$PermissionChanged;ZILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$PermissionChanged;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHasPermission ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState : com/splendo/kaluga/base/state/KalugaState {
	public abstract fun getNothingFound ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Active : com/splendo/kaluga/bluetooth/scanner/ScanningState {
	public abstract fun getDeinitialize ()Lkotlin/jvm/functions/Function1;
	public abstract fun getDevices ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$Active$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Active;)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Deinitialized : com/splendo/kaluga/bluetooth/scanner/ScanningState$Inactive {
	public abstract fun getPreviousDevices ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public abstract fun getReinitialize ()Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$Deinitialized$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Deinitialized;)Lkotlin/jvm/functions/Function1;
}

public abstract class com/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode {
	public abstract fun getFilter ()Ljava/util/Set;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode$Paired : com/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode {
	public fun <init> (Ljava/util/Set;)V
	public final fun component1 ()Ljava/util/Set;
	public final fun copy (Ljava/util/Set;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode$Paired;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode$Paired;Ljava/util/Set;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode$Paired;
	public fun equals (Ljava/lang/Object;)Z
	public fun getFilter ()Ljava/util/Set;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode$Scanning : com/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode {
	public fun <init> (Ljava/util/Set;)V
	public final fun component1 ()Ljava/util/Set;
	public final fun copy (Ljava/util/Set;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode$Scanning;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode$Scanning;Ljava/util/Set;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode$Scanning;
	public fun equals (Ljava/lang/Object;)Z
	public fun getFilter ()Ljava/util/Set;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Devices {
	public abstract fun copyAndAddScanned (Lcom/splendo/kaluga/bluetooth/UUID;Lkotlin/jvm/functions/Function0;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public abstract fun copyAndSetPaired (Ljava/util/Map;Ljava/util/Set;Z)Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public abstract fun devicesForCurrentScanFilter ()Ljava/util/List;
	public abstract fun devicesForDiscoveryMode (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode;)Ljava/util/List;
	public abstract fun getAllDevices ()Ljava/util/Map;
	public abstract fun getCurrentScanFilter ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode$Scanning;
	public abstract fun getIdentifiersForCurrentScanFilter ()Ljava/util/Set;
	public abstract fun getIdentifiersFoundForDeviceDiscoveryMode ()Ljava/util/Map;
	public abstract fun updateScanFilter (Ljava/util/Set;Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$Devices$DefaultImpls {
	public static fun devicesForCurrentScanFilter (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;)Ljava/util/List;
	public static fun devicesForDiscoveryMode (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$DeviceDiscoveryMode;)Ljava/util/List;
	public static fun getIdentifiersForCurrentScanFilter (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;)Ljava/util/Set;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled : com/splendo/kaluga/bluetooth/scanner/ScanningState$Permitted {
	public abstract fun getDisable ()Lkotlin/jvm/functions/Function1;
	public abstract fun pairedDevices (Ljava/util/Map;Ljava/util/Set;Z)Lkotlin/jvm/functions/Function1;
	public abstract fun retrievePairedDevices (Ljava/util/Set;ZLcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Idle : com/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled {
	public abstract fun refresh (Ljava/util/Set;Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;)Lkotlin/jvm/functions/Function1;
	public abstract fun startScanning (Ljava/util/Set;Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Idle$DefaultImpls {
	public static synthetic fun refresh$default (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Idle;Ljava/util/Set;Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;ILjava/lang/Object;)Lkotlin/jvm/functions/Function1;
	public static fun remain (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Idle;)Lkotlin/jvm/functions/Function1;
	public static synthetic fun startScanning$default (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Idle;Ljava/util/Set;Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;ILjava/lang/Object;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Scanning : com/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled {
	public abstract fun discoverDevices (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun stopScanning (Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Scanning$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Scanning;)Lkotlin/jvm/functions/Function1;
	public static synthetic fun stopScanning$default (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Scanning;Lcom/splendo/kaluga/bluetooth/BluetoothService$CleanMode;ILjava/lang/Object;)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Scanning$DiscoveredDevice {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/UUID;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;Lkotlin/jvm/functions/Function0;)V
	public final fun component1 ()Lcom/splendo/kaluga/bluetooth/UUID;
	public final fun component2 ()I
	public final fun component3 ()Lcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;
	public final fun component4 ()Lkotlin/jvm/functions/Function0;
	public final fun copy (Lcom/splendo/kaluga/bluetooth/UUID;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;Lkotlin/jvm/functions/Function0;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Scanning$DiscoveredDevice;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Scanning$DiscoveredDevice;Lcom/splendo/kaluga/bluetooth/UUID;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Scanning$DiscoveredDevice;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAdvertisementData ()Lcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;
	public final fun getDeviceCreator ()Lkotlin/jvm/functions/Function0;
	public final fun getIdentifier ()Lcom/splendo/kaluga/bluetooth/UUID;
	public final fun getRssi ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Inactive : com/splendo/kaluga/base/flow/SpecialFlowValue$NotImportant, com/splendo/kaluga/bluetooth/scanner/ScanningState {
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$Inactive$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Inactive;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Initialized : com/splendo/kaluga/bluetooth/scanner/ScanningState$Active {
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$Initialized$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Initialized;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Initializing : com/splendo/kaluga/base/flow/SpecialFlowValue$NotImportant, com/splendo/kaluga/bluetooth/scanner/ScanningState$Active {
	public abstract fun initialized (ZZ)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$Initializing$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Initializing;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$NoBluetooth : com/splendo/kaluga/bluetooth/scanner/ScanningState$Initialized {
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$NoBluetooth$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$NoBluetooth;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$NoBluetooth$Disabled : com/splendo/kaluga/bluetooth/scanner/ScanningState$NoBluetooth, com/splendo/kaluga/bluetooth/scanner/ScanningState$Permitted {
	public abstract fun getEnable ()Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$NoBluetooth$Disabled$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$NoBluetooth$Disabled;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$NoBluetooth$MissingPermissions : com/splendo/kaluga/bluetooth/scanner/ScanningState$NoBluetooth {
	public abstract fun permit (Z)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$NoBluetooth$MissingPermissions$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$NoBluetooth$MissingPermissions;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$NoHardware : com/splendo/kaluga/bluetooth/scanner/ScanningState {
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$NoHardware$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$NoHardware;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$NotInitialized : com/splendo/kaluga/bluetooth/scanner/ScanningState$Inactive {
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$NotInitialized$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$NotInitialized;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Permitted : com/splendo/kaluga/bluetooth/scanner/ScanningState$Initialized {
	public abstract fun getRevokePermission ()Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningState$Permitted$DefaultImpls {
	public static fun remain (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Permitted;)Lkotlin/jvm/functions/Function1;
}

public class com/splendo/kaluga/bluetooth/scanner/ScanningStateImplRepo : com/splendo/kaluga/bluetooth/scanner/BaseScanningStateRepo {
	public fun <init> (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/CoroutineContext;)V
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningStateKt {
	public static final fun discoverDevice (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Scanning;Lcom/splendo/kaluga/bluetooth/UUID;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningStateRepo : com/splendo/kaluga/bluetooth/scanner/ScanningStateImplRepo {
	public fun <init> (Lkotlin/jvm/functions/Function2;Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Builder;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/CoroutineContext;)V
}

