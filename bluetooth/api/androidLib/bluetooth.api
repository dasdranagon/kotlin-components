public abstract class com/splendo/kaluga/bluetooth/Attribute : kotlinx/coroutines/flow/Flow {
	public fun <init> ([BLkotlin/jvm/functions/Function1;Ljava/lang/String;Lcom/splendo/kaluga/logging/Logger;)V
	public synthetic fun <init> ([BLkotlin/jvm/functions/Function1;Ljava/lang/String;Lcom/splendo/kaluga/logging/Logger;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	protected final fun addAction (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;)V
	public fun collect (Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected final fun getLogTag ()Ljava/lang/String;
	public abstract fun getUuid ()Ljava/util/UUID;
	public final fun readValue ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction;
	public fun updateValue ()V
	public final fun writeValue ([B)Lcom/splendo/kaluga/bluetooth/device/DeviceAction;
}

public final class com/splendo/kaluga/bluetooth/Bluetooth : com/splendo/kaluga/bluetooth/BluetoothService, kotlinx/coroutines/CoroutineScope {
	public fun devices ()Lkotlinx/coroutines/flow/Flow;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun isEnabled ()Lkotlinx/coroutines/flow/Flow;
	public fun isScanning (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun pairedDevices (Ljava/util/Set;)Lkotlinx/coroutines/flow/Flow;
	public fun startScanning (Ljava/util/Set;)V
	public fun stopScanning ()V
}

public abstract interface class com/splendo/kaluga/bluetooth/Bluetooth$Builder {
	public abstract fun create (Lkotlin/jvm/functions/Function1;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/bluetooth/Bluetooth;
	public static synthetic fun create$default (Lcom/splendo/kaluga/bluetooth/Bluetooth$Builder;Lkotlin/jvm/functions/Function1;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/Bluetooth;
}

public abstract class com/splendo/kaluga/bluetooth/Bluetooth$ScanMode {
}

public final class com/splendo/kaluga/bluetooth/Bluetooth$ScanMode$Scan : com/splendo/kaluga/bluetooth/Bluetooth$ScanMode {
	public fun <init> (Ljava/util/Set;)V
	public final fun getFilter ()Ljava/util/Set;
}

public final class com/splendo/kaluga/bluetooth/Bluetooth$ScanMode$Stopped : com/splendo/kaluga/bluetooth/Bluetooth$ScanMode {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/Bluetooth$ScanMode$Stopped;
}

public final class com/splendo/kaluga/bluetooth/BluetoothBuilder : com/splendo/kaluga/bluetooth/Bluetooth$Builder {
	public fun <init> ()V
	public fun <init> (Landroid/content/Context;Lkotlin/jvm/functions/Function1;Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Builder;)V
	public synthetic fun <init> (Landroid/content/Context;Lkotlin/jvm/functions/Function1;Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Builder;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun create (Lkotlin/jvm/functions/Function1;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lkotlin/coroutines/CoroutineContext;)Lcom/splendo/kaluga/bluetooth/Bluetooth;
}

public final class com/splendo/kaluga/bluetooth/BluetoothKt {
	public static final fun advertisement (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun characteristics (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun connect (Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun descriptors (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun disconnect (Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun distance (Lkotlinx/coroutines/flow/Flow;DI)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun distance$default (Lkotlinx/coroutines/flow/Flow;DIILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static final fun get (Lkotlinx/coroutines/flow/Flow;Ljava/lang/String;)Lkotlinx/coroutines/flow/Flow;
	public static final fun getAttribute (Lkotlinx/coroutines/flow/Flow;Ljava/util/UUID;)Lkotlinx/coroutines/flow/Flow;
	public static final fun getService (Lkotlinx/coroutines/flow/Flow;Ljava/util/UUID;)Lkotlinx/coroutines/flow/Flow;
	public static final fun info (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun mtu (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun requestMtu (Lkotlinx/coroutines/flow/Flow;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun rssi (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun services (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun state (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun updateRssi (Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun value (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
}

public abstract interface class com/splendo/kaluga/bluetooth/BluetoothMonitor : com/splendo/kaluga/base/monitor/ServiceMonitor {
}

public final class com/splendo/kaluga/bluetooth/BluetoothMonitor$Builder {
	public fun <init> (Landroid/content/Context;Landroid/bluetooth/BluetoothAdapter;)V
	public synthetic fun <init> (Landroid/content/Context;Landroid/bluetooth/BluetoothAdapter;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun create ()Lcom/splendo/kaluga/bluetooth/BluetoothMonitor;
}

public abstract interface class com/splendo/kaluga/bluetooth/BluetoothService {
	public abstract fun devices ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun isEnabled ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun isScanning (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun pairedDevices (Ljava/util/Set;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun startScanning (Ljava/util/Set;)V
	public static synthetic fun startScanning$default (Lcom/splendo/kaluga/bluetooth/BluetoothService;Ljava/util/Set;ILjava/lang/Object;)V
	public abstract fun stopScanning ()V
}

public class com/splendo/kaluga/bluetooth/Characteristic : com/splendo/kaluga/bluetooth/Attribute {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/CharacteristicWrapper;[BLkotlin/jvm/functions/Function1;Ljava/lang/String;Lcom/splendo/kaluga/logging/Logger;)V
	public synthetic fun <init> (Lcom/splendo/kaluga/bluetooth/CharacteristicWrapper;[BLkotlin/jvm/functions/Function1;Ljava/lang/String;Lcom/splendo/kaluga/logging/Logger;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun createReadAction$bluetooth_release ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction$Read;
	public synthetic fun createWriteAction$bluetooth_release ([B)Lcom/splendo/kaluga/bluetooth/device/DeviceAction$Write;
	public final fun disableNotification (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun enableNotification (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getDescriptors ()Ljava/util/List;
	public fun getUuid ()Ljava/util/UUID;
	public final fun getWrapper ()Lcom/splendo/kaluga/bluetooth/CharacteristicWrapper;
	public final fun hasProperty (Lcom/splendo/kaluga/bluetooth/CharacteristicProperties;)Z
	public final fun isNotifying ()Z
	public final fun setNotifying (Z)V
}

public final class com/splendo/kaluga/bluetooth/CharacteristicKt {
	public static final fun containsAnyOf (Lcom/splendo/kaluga/bluetooth/CharacteristicWrapper;[I)Z
}

public abstract class com/splendo/kaluga/bluetooth/CharacteristicProperties {
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getRawValue ()I
	public final fun or (Lcom/splendo/kaluga/bluetooth/CharacteristicProperties;)I
}

public final class com/splendo/kaluga/bluetooth/CharacteristicProperties$Broadcast : com/splendo/kaluga/bluetooth/CharacteristicProperties {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/CharacteristicProperties$Broadcast;
}

public final class com/splendo/kaluga/bluetooth/CharacteristicProperties$ExtendedProperties : com/splendo/kaluga/bluetooth/CharacteristicProperties {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/CharacteristicProperties$ExtendedProperties;
}

public final class com/splendo/kaluga/bluetooth/CharacteristicProperties$Indicate : com/splendo/kaluga/bluetooth/CharacteristicProperties {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/CharacteristicProperties$Indicate;
}

public final class com/splendo/kaluga/bluetooth/CharacteristicProperties$Notify : com/splendo/kaluga/bluetooth/CharacteristicProperties {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/CharacteristicProperties$Notify;
}

public final class com/splendo/kaluga/bluetooth/CharacteristicProperties$Read : com/splendo/kaluga/bluetooth/CharacteristicProperties {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/CharacteristicProperties$Read;
}

public final class com/splendo/kaluga/bluetooth/CharacteristicProperties$SignedWrite : com/splendo/kaluga/bluetooth/CharacteristicProperties {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/CharacteristicProperties$SignedWrite;
}

public final class com/splendo/kaluga/bluetooth/CharacteristicProperties$Write : com/splendo/kaluga/bluetooth/CharacteristicProperties {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/CharacteristicProperties$Write;
}

public final class com/splendo/kaluga/bluetooth/CharacteristicProperties$WriteWithoutResponse : com/splendo/kaluga/bluetooth/CharacteristicProperties {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/CharacteristicProperties$WriteWithoutResponse;
}

public abstract interface class com/splendo/kaluga/bluetooth/CharacteristicWrapper {
	public abstract fun getDescriptor (Ljava/util/UUID;)Lcom/splendo/kaluga/bluetooth/DescriptorWrapper;
	public abstract fun getDescriptors ()Ljava/util/List;
	public abstract fun getPermissions ()I
	public abstract fun getProperties ()I
	public abstract fun getService ()Lcom/splendo/kaluga/bluetooth/ServiceWrapper;
	public abstract fun getUuid ()Ljava/util/UUID;
	public abstract fun getValue ()[B
	public abstract fun getWriteType ()I
	public abstract fun setWriteType (I)V
	public abstract fun updateValue ([B)V
}

public final class com/splendo/kaluga/bluetooth/CommonUUID {
	public static final fun uuidFrom (Ljava/lang/String;)Ljava/util/UUID;
}

public final class com/splendo/kaluga/bluetooth/DefaultBluetoothMonitor : com/splendo/kaluga/base/monitor/DefaultServiceMonitor, com/splendo/kaluga/bluetooth/BluetoothMonitor {
	public fun isServiceEnabled ()Z
	public fun monitoringDidStart ()V
	public fun monitoringDidStop ()V
}

public final class com/splendo/kaluga/bluetooth/DefaultCharacteristicWrapper : com/splendo/kaluga/bluetooth/CharacteristicWrapper {
	public fun <init> (Landroid/bluetooth/BluetoothGattCharacteristic;)V
	public fun getDescriptor (Ljava/util/UUID;)Lcom/splendo/kaluga/bluetooth/DescriptorWrapper;
	public fun getDescriptors ()Ljava/util/List;
	public fun getPermissions ()I
	public fun getProperties ()I
	public fun getService ()Lcom/splendo/kaluga/bluetooth/ServiceWrapper;
	public fun getUuid ()Ljava/util/UUID;
	public fun getValue ()[B
	public fun getWriteType ()I
	public fun setWriteType (I)V
	public fun updateValue ([B)V
}

public final class com/splendo/kaluga/bluetooth/DefaultDescriptorWrapper : com/splendo/kaluga/bluetooth/DescriptorWrapper {
	public fun <init> (Landroid/bluetooth/BluetoothGattDescriptor;)V
	public fun getCharacteristic ()Lcom/splendo/kaluga/bluetooth/CharacteristicWrapper;
	public fun getPermissions ()I
	public fun getUuid ()Ljava/util/UUID;
	public fun getValue ()[B
	public fun updateValue ([B)V
}

public final class com/splendo/kaluga/bluetooth/DefaultGattServiceWrapper : com/splendo/kaluga/bluetooth/ServiceWrapper {
	public fun <init> (Landroid/bluetooth/BluetoothGattService;)V
	public fun addCharacteristic (Landroid/bluetooth/BluetoothGattCharacteristic;)Z
	public fun addService (Landroid/bluetooth/BluetoothGattService;)Z
	public fun getCharacteristic (Ljava/util/UUID;)Lcom/splendo/kaluga/bluetooth/CharacteristicWrapper;
	public fun getCharacteristics ()Ljava/util/List;
	public fun getIncludedServices ()Ljava/util/List;
	public fun getInstanceId ()I
	public fun getType ()I
	public fun getUuid ()Ljava/util/UUID;
}

public class com/splendo/kaluga/bluetooth/Descriptor : com/splendo/kaluga/bluetooth/Attribute {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/DescriptorWrapper;[BLkotlin/jvm/functions/Function1;Ljava/lang/String;Lcom/splendo/kaluga/logging/Logger;)V
	public synthetic fun <init> (Lcom/splendo/kaluga/bluetooth/DescriptorWrapper;[BLkotlin/jvm/functions/Function1;Ljava/lang/String;Lcom/splendo/kaluga/logging/Logger;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun createReadAction$bluetooth_release ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction$Read;
	public synthetic fun createWriteAction$bluetooth_release ([B)Lcom/splendo/kaluga/bluetooth/device/DeviceAction$Write;
	public fun getUuid ()Ljava/util/UUID;
	public final fun getWrapper ()Lcom/splendo/kaluga/bluetooth/DescriptorWrapper;
}

public abstract interface class com/splendo/kaluga/bluetooth/DescriptorWrapper {
	public abstract fun getCharacteristic ()Lcom/splendo/kaluga/bluetooth/CharacteristicWrapper;
	public abstract fun getPermissions ()I
	public abstract fun getUuid ()Ljava/util/UUID;
	public abstract fun getValue ()[B
	public abstract fun updateValue ([B)V
}

public final class com/splendo/kaluga/bluetooth/PairingUtilsKt {
	public static final fun pair (Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun unpair (Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/splendo/kaluga/bluetooth/Service {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/ServiceWrapper;Lkotlin/jvm/functions/Function1;Ljava/lang/String;Lcom/splendo/kaluga/logging/Logger;)V
	public final fun getCharacteristics ()Ljava/util/List;
	public final fun getUuid ()Ljava/util/UUID;
}

public abstract interface class com/splendo/kaluga/bluetooth/ServiceWrapper {
	public abstract fun addCharacteristic (Landroid/bluetooth/BluetoothGattCharacteristic;)Z
	public abstract fun addService (Landroid/bluetooth/BluetoothGattService;)Z
	public abstract fun getCharacteristic (Ljava/util/UUID;)Lcom/splendo/kaluga/bluetooth/CharacteristicWrapper;
	public abstract fun getCharacteristics ()Ljava/util/List;
	public abstract fun getIncludedServices ()Ljava/util/List;
	public abstract fun getInstanceId ()I
	public abstract fun getType ()I
	public abstract fun getUuid ()Ljava/util/UUID;
}

public abstract class com/splendo/kaluga/bluetooth/UUIDException : java/lang/Exception {
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class com/splendo/kaluga/bluetooth/UUIDException$InvalidFormat : com/splendo/kaluga/bluetooth/UUIDException {
	public fun <init> (Ljava/lang/String;)V
}

public final class com/splendo/kaluga/bluetooth/UUIDKt {
	public static final fun getUuidString (Ljava/util/UUID;)Ljava/lang/String;
	public static final fun randomUUID ()Ljava/util/UUID;
}

public final class com/splendo/kaluga/bluetooth/ValueKt {
	public static final fun getAsBytes ([B)[B
}

public final class com/splendo/kaluga/bluetooth/device/AdvertisementData : com/splendo/kaluga/bluetooth/device/BaseAdvertisementData {
	public fun <init> (Lno/nordicsemi/android/support/v18/scanner/ScanResult;)V
	public fun getManufacturerData ()[B
	public fun getManufacturerId ()Ljava/lang/Integer;
	public fun getName ()Ljava/lang/String;
	public fun getServiceData ()Ljava/util/Map;
	public fun getServiceUUIDs ()Ljava/util/List;
	public fun getTxPowerLevel ()I
	public fun isConnectable ()Z
}

public final class com/splendo/kaluga/bluetooth/device/AdvertisementDataKt {
	public static final fun getDescription (Lcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;)Ljava/lang/String;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/BaseAdvertisementData {
	public abstract fun getManufacturerData ()[B
	public abstract fun getManufacturerId ()Ljava/lang/Integer;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getServiceData ()Ljava/util/Map;
	public abstract fun getServiceUUIDs ()Ljava/util/List;
	public abstract fun getTxPowerLevel ()I
	public abstract fun isConnectable ()Z
}

public abstract class com/splendo/kaluga/bluetooth/device/BaseConnectableDeviceStateRepo : com/splendo/kaluga/state/HotStateFlowRepo {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/CoroutineContext;)V
}

public abstract class com/splendo/kaluga/bluetooth/device/BaseDeviceConnectionManager : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager, kotlinx/coroutines/CoroutineScope {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/device/DeviceWrapper;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lkotlinx/coroutines/CoroutineScope;)V
	public fun cancelConnecting ()V
	public final fun createService (Lcom/splendo/kaluga/bluetooth/ServiceWrapper;)Lcom/splendo/kaluga/bluetooth/Service;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	protected final fun getCurrentAction ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction;
	public final fun getDeviceWrapper ()Lcom/splendo/kaluga/bluetooth/device/DeviceWrapper;
	public fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	protected final fun getNotifyingCharacteristics ()Lco/touchlab/stately/collections/IsoMutableMap;
	public synthetic fun getRssi ()Lkotlinx/coroutines/flow/Flow;
	public fun getRssi ()Lkotlinx/coroutines/flow/SharedFlow;
	public fun handleConnect ()V
	public fun handleCurrentActionCompleted (Z)V
	public fun handleDisconnect (Lkotlin/jvm/functions/Function1;)V
	public final fun handleDiscoverCompleted (Ljava/util/List;)V
	public final fun handleDiscoverWrappersCompleted (Ljava/util/List;)V
	public final fun handleNewMtu (I)V
	public final fun handleNewRssi (I)V
	public final fun handleUpdatedCharacteristic (Ljava/util/UUID;ZLkotlin/jvm/functions/Function1;)V
	public static synthetic fun handleUpdatedCharacteristic$default (Lcom/splendo/kaluga/bluetooth/device/BaseDeviceConnectionManager;Ljava/util/UUID;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public final fun handleUpdatedDescriptor (Ljava/util/UUID;ZLkotlin/jvm/functions/Function1;)V
	public static synthetic fun handleUpdatedDescriptor$default (Lcom/splendo/kaluga/bluetooth/device/BaseDeviceConnectionManager;Ljava/util/UUID;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public fun performAction (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun readRssi (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun reset (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected final fun setCurrentAction (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;)V
	public fun startConnecting ()V
	public fun startDisconnecting ()V
	public fun startDiscovering ()V
}

public abstract interface class com/splendo/kaluga/bluetooth/device/BaseDeviceConnectionManager$Builder {
	public abstract fun create (Lcom/splendo/kaluga/bluetooth/device/DeviceWrapper;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lkotlinx/coroutines/CoroutineScope;)Lcom/splendo/kaluga/bluetooth/device/BaseDeviceConnectionManager;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/BluetoothGattWrapper {
	public abstract fun close ()V
	public abstract fun connect ()Z
	public abstract fun disconnect ()V
	public abstract fun discoverServices ()Z
	public abstract fun readCharacteristic (Lcom/splendo/kaluga/bluetooth/CharacteristicWrapper;)Z
	public abstract fun readDescriptor (Lcom/splendo/kaluga/bluetooth/DescriptorWrapper;)Z
	public abstract fun readRemoteRssi ()Z
	public abstract fun requestMtu (I)Z
	public abstract fun setCharacteristicNotification (Lcom/splendo/kaluga/bluetooth/CharacteristicWrapper;Z)Z
	public abstract fun writeCharacteristic (Lcom/splendo/kaluga/bluetooth/CharacteristicWrapper;[B)Z
	public abstract fun writeDescriptor (Lcom/splendo/kaluga/bluetooth/DescriptorWrapper;[B)Z
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState : com/splendo/kaluga/bluetooth/device/DeviceState, com/splendo/kaluga/state/KalugaState {
	public abstract fun getDidDisconnect ()Lkotlin/jvm/functions/Function1;
	public abstract fun getDisconnecting ()Lkotlin/jvm/functions/Function1;
	public abstract fun unpair (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState {
	public abstract fun didUpdateMtu (I)Lkotlin/jvm/functions/Function1;
	public abstract fun getMtu ()Ljava/lang/Integer;
	public abstract fun getReconnect ()Lkotlin/jvm/functions/Function1;
	public abstract fun pair (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun readRssi (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun requestMtu (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun startDisconnected ()V
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$DiscoveredServices : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected {
	public abstract fun getServices ()Ljava/util/List;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$Discovering : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected {
	public abstract fun didDiscoverServices (Ljava/util/List;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$HandlingAction : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$DiscoveredServices {
	public abstract fun addAction (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;)Lkotlin/jvm/functions/Function1;
	public abstract fun getAction ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction;
	public abstract fun getActionCompleted ()Lkotlin/jvm/functions/Function1;
	public abstract fun getNextActions ()Ljava/util/List;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$Idle : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$DiscoveredServices {
	public abstract fun handleAction (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$NoServices : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected {
	public abstract fun getDiscoverServices ()Lkotlin/jvm/functions/Function1;
	public abstract fun startDiscovering ()V
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connecting : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState {
	public abstract fun getCancelConnection ()Lkotlin/jvm/functions/Function1;
	public abstract fun getDidConnect ()Lkotlin/jvm/functions/Function1;
	public abstract fun handleCancel ()V
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Disconnected : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState {
	public abstract fun getConnect ()Lkotlin/jvm/functions/Function1;
	public abstract fun startConnecting ()V
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Disconnecting : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState {
}

public abstract interface class com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Reconnecting : com/splendo/kaluga/bluetooth/device/ConnectableDeviceState {
	public abstract fun getAttempt ()I
	public abstract fun getCancelConnection ()Lkotlin/jvm/functions/Function1;
	public abstract fun getDidConnect ()Lkotlin/jvm/functions/Function1;
	public abstract fun getRaiseAttempt ()Lkotlin/jvm/functions/Function1;
	public abstract fun getServices ()Ljava/util/List;
	public abstract fun handleCancel ()V
	public fun retry (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;)Lkotlin/jvm/functions/Function1;
}

public abstract class com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl {
	protected abstract fun getDeviceConnectionManager ()Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;
	public final fun getDidDisconnect ()Lkotlin/jvm/functions/Function1;
	public final fun getDisconnecting ()Lkotlin/jvm/functions/Function1;
	public final fun unpair (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected : com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl {
	public final fun getReconnect ()Lkotlin/jvm/functions/Function1;
	public final fun pair (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun readRssi (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun requestMtu (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun startDisconnected ()V
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected$Discovering : com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected, com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$Discovering, com/splendo/kaluga/state/HandleAfterOldStateIsRemoved {
	public fun <init> (Ljava/lang/Integer;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;)V
	public fun afterOldStateIsRemoved (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun afterOldStateIsRemoved (Lcom/splendo/kaluga/state/KalugaState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun component1 ()Ljava/lang/Integer;
	public final fun copy (Ljava/lang/Integer;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;)Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected$Discovering;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected$Discovering;Ljava/lang/Integer;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected$Discovering;
	public fun didDiscoverServices (Ljava/util/List;)Lkotlin/jvm/functions/Function1;
	public fun didUpdateMtu (I)Lkotlin/jvm/functions/Function1;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMtu ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected$HandlingAction : com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected, com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$HandlingAction, com/splendo/kaluga/state/HandleAfterOldStateIsRemoved {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;Ljava/util/List;Ljava/lang/Integer;Ljava/util/List;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;)V
	public fun addAction (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;)Lkotlin/jvm/functions/Function1;
	public fun afterOldStateIsRemoved (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun afterOldStateIsRemoved (Lcom/splendo/kaluga/state/KalugaState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun component1 ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/lang/Integer;
	public final fun component4 ()Ljava/util/List;
	public final fun copy (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;Ljava/util/List;Ljava/lang/Integer;Ljava/util/List;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;)Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected$HandlingAction;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected$HandlingAction;Lcom/splendo/kaluga/bluetooth/device/DeviceAction;Ljava/util/List;Ljava/lang/Integer;Ljava/util/List;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected$HandlingAction;
	public fun didUpdateMtu (I)Lkotlin/jvm/functions/Function1;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAction ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction;
	public fun getActionCompleted ()Lkotlin/jvm/functions/Function1;
	public fun getMtu ()Ljava/lang/Integer;
	public fun getNextActions ()Ljava/util/List;
	public fun getServices ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected$Idle : com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected, com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$Idle {
	public fun <init> (Ljava/lang/Integer;Ljava/util/List;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;)V
	public final fun component1 ()Ljava/lang/Integer;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/lang/Integer;Ljava/util/List;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;)Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected$Idle;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected$Idle;Ljava/lang/Integer;Ljava/util/List;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected$Idle;
	public fun didUpdateMtu (I)Lkotlin/jvm/functions/Function1;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMtu ()Ljava/lang/Integer;
	public fun getServices ()Ljava/util/List;
	public fun handleAction (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;)Lkotlin/jvm/functions/Function1;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected$NoServices : com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected, com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connected$NoServices {
	public fun <init> (Ljava/lang/Integer;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;)V
	public final fun component1 ()Ljava/lang/Integer;
	public final fun copy (Ljava/lang/Integer;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;)Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected$NoServices;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected$NoServices;Ljava/lang/Integer;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connected$NoServices;
	public fun didUpdateMtu (I)Lkotlin/jvm/functions/Function1;
	public fun equals (Ljava/lang/Object;)Z
	public fun getDiscoverServices ()Lkotlin/jvm/functions/Function1;
	public fun getMtu ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun startDiscovering ()V
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connecting : com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl, com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Connecting, com/splendo/kaluga/state/HandleAfterOldStateIsRemoved {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;)V
	public fun afterOldStateIsRemoved (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun afterOldStateIsRemoved (Lcom/splendo/kaluga/state/KalugaState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun copy (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;)Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connecting;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connecting;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Connecting;
	public fun equals (Ljava/lang/Object;)Z
	public fun getCancelConnection ()Lkotlin/jvm/functions/Function1;
	public fun getDidConnect ()Lkotlin/jvm/functions/Function1;
	public fun handleCancel ()V
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Disconnected : com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl, com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Disconnected {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;)V
	public final fun copy (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;)Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Disconnected;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Disconnected;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Disconnected;
	public fun equals (Ljava/lang/Object;)Z
	public fun getConnect ()Lkotlin/jvm/functions/Function1;
	public fun hashCode ()I
	public fun startConnecting ()V
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Disconnecting : com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl, com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Disconnecting, com/splendo/kaluga/state/HandleAfterOldStateIsRemoved {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;)V
	public fun afterOldStateIsRemoved (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun afterOldStateIsRemoved (Lcom/splendo/kaluga/state/KalugaState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun copy (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;)Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Disconnecting;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Disconnecting;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Disconnecting;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Reconnecting : com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl, com/splendo/kaluga/bluetooth/device/ConnectableDeviceState$Reconnecting, com/splendo/kaluga/state/HandleAfterOldStateIsRemoved {
	public fun <init> (ILjava/util/List;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;)V
	public fun afterOldStateIsRemoved (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun afterOldStateIsRemoved (Lcom/splendo/kaluga/state/KalugaState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun component1 ()I
	public final fun component2 ()Ljava/util/List;
	public final fun copy (ILjava/util/List;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;)Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Reconnecting;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Reconnecting;ILjava/util/List;Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImpl$Reconnecting;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAttempt ()I
	public fun getCancelConnection ()Lkotlin/jvm/functions/Function1;
	public fun getDidConnect ()Lkotlin/jvm/functions/Function1;
	public fun getRaiseAttempt ()Lkotlin/jvm/functions/Function1;
	public fun getServices ()Ljava/util/List;
	public fun handleCancel ()V
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/ConnectableDeviceStateImplRepo : com/splendo/kaluga/bluetooth/device/BaseConnectableDeviceStateRepo {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;Lkotlin/coroutines/CoroutineContext;)V
}

public final class com/splendo/kaluga/bluetooth/device/ConnectionSettings {
	public fun <init> ()V
	public fun <init> (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;Lcom/splendo/kaluga/logging/Logger;)V
	public synthetic fun <init> (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;Lcom/splendo/kaluga/logging/Logger;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;
	public final fun component2 ()Lcom/splendo/kaluga/logging/Logger;
	public final fun copy (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;Lcom/splendo/kaluga/logging/Logger;)Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;Lcom/splendo/kaluga/logging/Logger;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLogger ()Lcom/splendo/kaluga/logging/Logger;
	public final fun getReconnectionSettings ()Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings {
}

public final class com/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings$Always : com/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings$Always;
}

public final class com/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings$Limited : com/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings {
	public fun <init> (I)V
	public final fun component1 ()I
	public final fun copy (I)Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings$Limited;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings$Limited;IILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings$Limited;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAttempts ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings$Never : com/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings$ReconnectionSettings$Never;
}

public final class com/splendo/kaluga/bluetooth/device/DefaultBluetoothGattWrapper : com/splendo/kaluga/bluetooth/device/BluetoothGattWrapper {
	public fun <init> (Landroid/bluetooth/BluetoothGatt;)V
	public fun close ()V
	public fun connect ()Z
	public fun disconnect ()V
	public fun discoverServices ()Z
	public fun readCharacteristic (Lcom/splendo/kaluga/bluetooth/CharacteristicWrapper;)Z
	public fun readDescriptor (Lcom/splendo/kaluga/bluetooth/DescriptorWrapper;)Z
	public fun readRemoteRssi ()Z
	public fun requestMtu (I)Z
	public fun setCharacteristicNotification (Lcom/splendo/kaluga/bluetooth/CharacteristicWrapper;Z)Z
	public fun writeCharacteristic (Lcom/splendo/kaluga/bluetooth/CharacteristicWrapper;[B)Z
	public fun writeDescriptor (Lcom/splendo/kaluga/bluetooth/DescriptorWrapper;[B)Z
}

public final class com/splendo/kaluga/bluetooth/device/DefaultDeviceWrapper : com/splendo/kaluga/bluetooth/device/DeviceWrapper {
	public fun <init> (Landroid/bluetooth/BluetoothDevice;)V
	public fun connectGatt (Landroid/content/Context;ZLandroid/bluetooth/BluetoothGattCallback;)Lcom/splendo/kaluga/bluetooth/device/BluetoothGattWrapper;
	public fun createBond ()V
	public fun getBondState ()I
	public fun getDevice ()Landroid/bluetooth/BluetoothDevice;
	public fun getIdentifier ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun removeBond ()V
}

public abstract interface class com/splendo/kaluga/bluetooth/device/Device {
	public abstract fun advertisementDataDidUpdate (Lcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;)V
	public abstract fun connect (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun disconnect (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getIdentifier ()Ljava/lang/String;
	public abstract fun getInfo ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getState ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun handleConnected ()V
	public abstract fun handleDisconnected (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun rssiDidUpdate (I)V
}

public abstract class com/splendo/kaluga/bluetooth/device/DeviceAction {
	public final fun getCompletedSuccessfully ()Lkotlinx/coroutines/CompletableDeferred;
}

public abstract class com/splendo/kaluga/bluetooth/device/DeviceAction$Notification : com/splendo/kaluga/bluetooth/device/DeviceAction {
	public synthetic fun <init> (Lcom/splendo/kaluga/bluetooth/Characteristic;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCharacteristic ()Lcom/splendo/kaluga/bluetooth/Characteristic;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceAction$Notification$Disable : com/splendo/kaluga/bluetooth/device/DeviceAction$Notification {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/Characteristic;)V
}

public final class com/splendo/kaluga/bluetooth/device/DeviceAction$Notification$Enable : com/splendo/kaluga/bluetooth/device/DeviceAction$Notification {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/Characteristic;)V
}

public abstract class com/splendo/kaluga/bluetooth/device/DeviceAction$Read : com/splendo/kaluga/bluetooth/device/DeviceAction {
}

public final class com/splendo/kaluga/bluetooth/device/DeviceAction$Read$Characteristic : com/splendo/kaluga/bluetooth/device/DeviceAction$Read {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/Characteristic;)V
	public final fun getCharacteristic ()Lcom/splendo/kaluga/bluetooth/Characteristic;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceAction$Read$Descriptor : com/splendo/kaluga/bluetooth/device/DeviceAction$Read {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/Descriptor;)V
	public final fun getDescriptor ()Lcom/splendo/kaluga/bluetooth/Descriptor;
}

public abstract class com/splendo/kaluga/bluetooth/device/DeviceAction$Write : com/splendo/kaluga/bluetooth/device/DeviceAction {
	public synthetic fun <init> ([BLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getNewValue ()[B
}

public final class com/splendo/kaluga/bluetooth/device/DeviceAction$Write$Characteristic : com/splendo/kaluga/bluetooth/device/DeviceAction$Write {
	public fun <init> ([BLcom/splendo/kaluga/bluetooth/Characteristic;)V
	public final fun getCharacteristic ()Lcom/splendo/kaluga/bluetooth/Characteristic;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceAction$Write$Descriptor : com/splendo/kaluga/bluetooth/device/DeviceAction$Write {
	public fun <init> ([BLcom/splendo/kaluga/bluetooth/Descriptor;)V
	public final fun getDescriptor ()Lcom/splendo/kaluga/bluetooth/Descriptor;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager {
	public abstract fun cancelConnecting ()V
	public abstract fun connect (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun disconnect (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun discoverServices (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getCurrentState ()Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$State;
	public abstract fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getRssi ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun handleConnect ()V
	public abstract fun handleDisconnect (Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun handleDisconnect$default (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public abstract fun pair (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun performAction (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun readRssi (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun requestMtu (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun reset (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun startConnecting ()V
	public abstract fun startDisconnecting ()V
	public abstract fun startDiscovering ()V
	public abstract fun unpair (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$AddAction : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;)V
	public final fun component1 ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction;
	public final fun copy (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$AddAction;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$AddAction;Lcom/splendo/kaluga/bluetooth/device/DeviceAction;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$AddAction;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAction ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$CancelledConnecting : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$CancelledConnecting;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$CompletedAction : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;Z)V
	public final fun component1 ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction;
	public final fun component2 ()Z
	public final fun copy (Lcom/splendo/kaluga/bluetooth/device/DeviceAction;Z)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$CompletedAction;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$CompletedAction;Lcom/splendo/kaluga/bluetooth/device/DeviceAction;ZILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$CompletedAction;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAction ()Lcom/splendo/kaluga/bluetooth/device/DeviceAction;
	public final fun getSucceeded ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Connected : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Connected;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Connecting : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Connecting;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Disconnected : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final fun component1 ()Lkotlin/jvm/functions/Function1;
	public final fun copy (Lkotlin/jvm/functions/Function1;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Disconnected;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Disconnected;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Disconnected;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getOnDisconnect ()Lkotlin/jvm/functions/Function1;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Disconnecting : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Disconnecting;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$DiscoveredServices : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$DiscoveredServices;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$DiscoveredServices;Ljava/util/List;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$DiscoveredServices;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getServices ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Discovering : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$Discovering;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$MtuUpdated : com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event {
	public fun <init> (I)V
	public final fun component1 ()I
	public final fun copy (I)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$MtuUpdated;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$MtuUpdated;IILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$Event$MtuUpdated;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getNewMtu ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceConnectionManager$State : java/lang/Enum {
	public static final field CONNECTED Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$State;
	public static final field CONNECTING Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$State;
	public static final field DISCONNECTED Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$State;
	public static final field DISCONNECTING Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$State;
	public static fun valueOf (Ljava/lang/String;)Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$State;
	public static fun values ()[Lcom/splendo/kaluga/bluetooth/device/DeviceConnectionManager$State;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceImpl : com/splendo/kaluga/bluetooth/device/Device, kotlinx/coroutines/CoroutineScope {
	public static final field Companion Lcom/splendo/kaluga/bluetooth/device/DeviceImpl$Companion;
	public static final field TAG Ljava/lang/String;
	public fun <init> (Ljava/lang/String;Lcom/splendo/kaluga/bluetooth/device/DeviceInfoImpl;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lkotlin/jvm/functions/Function1;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;)V
	public synthetic fun <init> (Ljava/lang/String;Lcom/splendo/kaluga/bluetooth/device/DeviceInfoImpl;Lcom/splendo/kaluga/bluetooth/device/ConnectionSettings;Lkotlin/jvm/functions/Function1;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function2;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun advertisementDataDidUpdate (Lcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;)V
	public fun connect (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun disconnect (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getIdentifier ()Ljava/lang/String;
	public fun getInfo ()Lkotlinx/coroutines/flow/Flow;
	public fun getState ()Lkotlinx/coroutines/flow/Flow;
	public fun handleConnected ()V
	public fun handleDisconnected (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun rssiDidUpdate (I)V
}

public final class com/splendo/kaluga/bluetooth/device/DeviceImpl$Companion {
}

public abstract interface class com/splendo/kaluga/bluetooth/device/DeviceInfo {
	public abstract fun distance (D)D
	public static synthetic fun distance$default (Lcom/splendo/kaluga/bluetooth/device/DeviceInfo;DILjava/lang/Object;)D
	public abstract fun getAdvertisementData ()Lcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;
	public abstract fun getIdentifier ()Ljava/lang/String;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getRssi ()I
	public abstract fun getUpdatedAt ()Lcom/splendo/kaluga/base/utils/KalugaDate;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceInfoImpl : com/splendo/kaluga/bluetooth/device/DeviceInfo {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/device/DeviceWrapper;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()I
	public final fun component4 ()Lcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;)Lcom/splendo/kaluga/bluetooth/device/DeviceInfoImpl;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/device/DeviceInfoImpl;Ljava/lang/String;Ljava/lang/String;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/device/DeviceInfoImpl;
	public fun distance (D)D
	public fun equals (Ljava/lang/Object;)Z
	public fun getAdvertisementData ()Lcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;
	public fun getIdentifier ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getRssi ()I
	public fun getUpdatedAt ()Lcom/splendo/kaluga/base/utils/KalugaDate;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/device/DeviceInfoKt {
	public static final fun getStringValue (Ljava/lang/String;)Ljava/lang/String;
	public static final fun randomIdentifier ()Ljava/lang/String;
}

public abstract interface class com/splendo/kaluga/bluetooth/device/DeviceState {
}

public abstract interface class com/splendo/kaluga/bluetooth/device/DeviceWrapper {
	public abstract fun connectGatt (Landroid/content/Context;ZLandroid/bluetooth/BluetoothGattCallback;)Lcom/splendo/kaluga/bluetooth/device/BluetoothGattWrapper;
	public abstract fun createBond ()V
	public abstract fun getBondState ()I
	public abstract fun getDevice ()Landroid/bluetooth/BluetoothDevice;
	public abstract fun getIdentifier ()Ljava/lang/String;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun removeBond ()V
}

public abstract interface class com/splendo/kaluga/bluetooth/device/NotConnectableDeviceState : com/splendo/kaluga/bluetooth/device/DeviceState {
}

public final class com/splendo/kaluga/bluetooth/device/NotConnectableDeviceStateImpl : com/splendo/kaluga/bluetooth/device/NotConnectableDeviceState {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/device/NotConnectableDeviceStateImpl;
}

public abstract class com/splendo/kaluga/bluetooth/scanner/BaseScanner : com/splendo/kaluga/bluetooth/scanner/Scanner, kotlinx/coroutines/CoroutineScope {
	public static final field Companion Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Companion;
	public fun <init> (Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Settings;Lkotlinx/coroutines/CoroutineScope;)V
	protected abstract fun didStartScanning (Ljava/util/Set;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected abstract fun didStopScanning (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected abstract fun getBluetoothEnabledMonitor ()Lcom/splendo/kaluga/bluetooth/BluetoothMonitor;
	protected final fun getBluetoothPermissionRepo ()Lcom/splendo/kaluga/state/StateRepo;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	protected fun getEnabledFlow ()Lkotlinx/coroutines/flow/Flow;
	protected final fun getEventChannel ()Lkotlinx/coroutines/channels/Channel;
	public fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	protected fun getPermissionsFlow ()Lkotlinx/coroutines/flow/Flow;
	public fun isHardwareEnabled (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun requestEnableHardware (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun scanForDevices (Ljava/util/Set;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun startMonitoringHardwareEnabled ()V
	public fun startMonitoringPermissions ()V
	public fun stopMonitoringHardwareEnabled ()V
	public fun stopMonitoringPermissions ()V
	public final fun stopScanning (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/BaseScanner$Builder {
	public abstract fun create (Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Settings;Lkotlinx/coroutines/CoroutineScope;)Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner;
}

public final class com/splendo/kaluga/bluetooth/scanner/BaseScanner$Companion {
}

public final class com/splendo/kaluga/bluetooth/scanner/BaseScanner$Settings {
	public fun <init> (Lcom/splendo/kaluga/permissions/base/Permissions;ZZLcom/splendo/kaluga/logging/Logger;Z)V
	public synthetic fun <init> (Lcom/splendo/kaluga/permissions/base/Permissions;ZZLcom/splendo/kaluga/logging/Logger;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lcom/splendo/kaluga/permissions/base/Permissions;
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Lcom/splendo/kaluga/logging/Logger;
	public final fun component5 ()Z
	public final fun copy (Lcom/splendo/kaluga/permissions/base/Permissions;ZZLcom/splendo/kaluga/logging/Logger;Z)Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Settings;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Settings;Lcom/splendo/kaluga/permissions/base/Permissions;ZZLcom/splendo/kaluga/logging/Logger;ZILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Settings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAutoEnableSensors ()Z
	public final fun getAutoRequestPermission ()Z
	public final fun getDiscoverBondedDevices ()Z
	public final fun getLogger ()Lcom/splendo/kaluga/logging/Logger;
	public final fun getPermissions ()Lcom/splendo/kaluga/permissions/base/Permissions;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/bluetooth/scanner/BaseScanningStateRepo : com/splendo/kaluga/state/ColdStateFlowRepo {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/CoroutineContext;)V
}

public final class com/splendo/kaluga/bluetooth/scanner/DefaultScanner : com/splendo/kaluga/bluetooth/scanner/BaseScanner {
	public static final field Companion Lcom/splendo/kaluga/bluetooth/scanner/DefaultScanner$Companion;
	public fun generateEnableSensorsActions ()Ljava/util/List;
	public fun isHardwareEnabled (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun isSupported ()Z
	public fun retrievePairedDevices (Ljava/util/Set;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun startMonitoringHardwareEnabled ()V
	public fun stopMonitoringHardwareEnabled ()V
}

public final class com/splendo/kaluga/bluetooth/scanner/DefaultScanner$Builder : com/splendo/kaluga/bluetooth/scanner/BaseScanner$Builder {
	public fun <init> ()V
	public fun <init> (Landroid/content/Context;Lno/nordicsemi/android/support/v18/scanner/BluetoothLeScannerCompat;Landroid/bluetooth/BluetoothAdapter;Lno/nordicsemi/android/support/v18/scanner/ScanSettings;)V
	public synthetic fun <init> (Landroid/content/Context;Lno/nordicsemi/android/support/v18/scanner/BluetoothLeScannerCompat;Landroid/bluetooth/BluetoothAdapter;Lno/nordicsemi/android/support/v18/scanner/ScanSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun create (Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Settings;Lkotlinx/coroutines/CoroutineScope;)Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner;
}

public final class com/splendo/kaluga/bluetooth/scanner/DefaultScanner$Companion {
	public final fun getDefaultScanSettings ()Lno/nordicsemi/android/support/v18/scanner/ScanSettings;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/Scanner {
	public abstract fun generateEnableSensorsActions ()Ljava/util/List;
	public abstract fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun isHardwareEnabled (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun isSupported ()Z
	public abstract fun requestEnableHardware (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun retrievePairedDevices (Ljava/util/Set;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun scanForDevices (Ljava/util/Set;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun startMonitoringHardwareEnabled ()V
	public abstract fun startMonitoringPermissions ()V
	public abstract fun stopMonitoringHardwareEnabled ()V
	public abstract fun stopMonitoringPermissions ()V
	public abstract fun stopScanning (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class com/splendo/kaluga/bluetooth/scanner/Scanner$Event {
}

public final class com/splendo/kaluga/bluetooth/scanner/Scanner$Event$BluetoothDisabled : com/splendo/kaluga/bluetooth/scanner/Scanner$Event {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$BluetoothDisabled;
}

public final class com/splendo/kaluga/bluetooth/scanner/Scanner$Event$BluetoothEnabled : com/splendo/kaluga/bluetooth/scanner/Scanner$Event {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$BluetoothEnabled;
}

public final class com/splendo/kaluga/bluetooth/scanner/Scanner$Event$DeviceConnected : com/splendo/kaluga/bluetooth/scanner/Scanner$Event {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$DeviceConnected;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$DeviceConnected;Ljava/lang/String;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$DeviceConnected;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIdentifier ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/scanner/Scanner$Event$DeviceDisconnected : com/splendo/kaluga/bluetooth/scanner/Scanner$Event {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$DeviceDisconnected;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$DeviceDisconnected;Ljava/lang/String;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$DeviceDisconnected;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIdentifier ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/scanner/Scanner$Event$DeviceDiscovered : com/splendo/kaluga/bluetooth/scanner/Scanner$Event {
	public fun <init> (Ljava/lang/String;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;Lkotlin/jvm/functions/Function0;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()I
	public final fun component3 ()Lcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;
	public final fun component4 ()Lkotlin/jvm/functions/Function0;
	public final fun copy (Ljava/lang/String;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;Lkotlin/jvm/functions/Function0;)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$DeviceDiscovered;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$DeviceDiscovered;Ljava/lang/String;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$DeviceDiscovered;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAdvertisementData ()Lcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;
	public final fun getDeviceCreator ()Lkotlin/jvm/functions/Function0;
	public final fun getIdentifier ()Ljava/lang/String;
	public final fun getRssi ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/scanner/Scanner$Event$FailedScanning : com/splendo/kaluga/bluetooth/scanner/Scanner$Event {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$FailedScanning;
}

public final class com/splendo/kaluga/bluetooth/scanner/Scanner$Event$PairedDevicesRetrieved : com/splendo/kaluga/bluetooth/scanner/Scanner$Event {
	public fun <init> (Ljava/util/Set;Ljava/util/List;)V
	public final fun component1 ()Ljava/util/Set;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/util/Set;Ljava/util/List;)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$PairedDevicesRetrieved;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$PairedDevicesRetrieved;Ljava/util/Set;Ljava/util/List;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$PairedDevicesRetrieved;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDeviceCreators ()Ljava/util/List;
	public final fun getDevices ()Ljava/util/List;
	public final fun getFilter ()Ljava/util/Set;
	public final fun getIdentifiers ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/scanner/Scanner$Event$PermissionChanged : com/splendo/kaluga/bluetooth/scanner/Scanner$Event {
	public fun <init> (Z)V
	public final fun component1 ()Z
	public final fun copy (Z)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$PermissionChanged;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$PermissionChanged;ZILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/Scanner$Event$PermissionChanged;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHasPermission ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState : com/splendo/kaluga/state/KalugaState {
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Active : com/splendo/kaluga/bluetooth/scanner/ScanningState {
	public abstract fun getDeinitialize ()Lkotlin/jvm/functions/Function1;
	public abstract fun getDiscovered ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public abstract fun getPaired ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Deinitialized : com/splendo/kaluga/bluetooth/scanner/ScanningState$Inactive {
	public abstract fun getPreviouslyDiscovered ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public abstract fun getPreviouslyPaired ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public abstract fun getReinitialize ()Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Devices {
	public abstract fun copyAndAdd (Lcom/splendo/kaluga/bluetooth/device/Device;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public abstract fun foundForFilter (Ljava/util/Set;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public abstract fun getDevices ()Ljava/util/List;
	public abstract fun getFilter ()Ljava/util/Set;
	public fun identifiers ()Ljava/util/Set;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled : com/splendo/kaluga/bluetooth/scanner/ScanningState$Permitted {
	public abstract fun getDisable ()Lkotlin/jvm/functions/Function1;
	public abstract fun pairedDevices (Ljava/util/Set;Ljava/util/Set;Ljava/util/List;)Lkotlin/jvm/functions/Function1;
	public abstract fun retrievePairedDevices (Ljava/util/Set;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Idle : com/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled {
	public abstract fun refresh (Ljava/util/Set;)Lkotlin/jvm/functions/Function1;
	public static synthetic fun refresh$default (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Idle;Ljava/util/Set;ILjava/lang/Object;)Lkotlin/jvm/functions/Function1;
	public abstract fun startScanning (Ljava/util/Set;)Lkotlin/jvm/functions/Function1;
	public static synthetic fun startScanning$default (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Idle;Ljava/util/Set;ILjava/lang/Object;)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Scanning : com/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled {
	public abstract fun discoverDevice (Ljava/lang/String;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getStopScanning ()Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Inactive : com/splendo/kaluga/base/flow/SpecialFlowValue$NotImportant, com/splendo/kaluga/bluetooth/scanner/ScanningState {
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Initialized : com/splendo/kaluga/bluetooth/scanner/ScanningState$Active {
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Initializing : com/splendo/kaluga/base/flow/SpecialFlowValue$NotImportant, com/splendo/kaluga/bluetooth/scanner/ScanningState$Active {
	public abstract fun initialized (ZZ)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$NoBluetooth : com/splendo/kaluga/bluetooth/scanner/ScanningState$Initialized {
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$NoBluetooth$Disabled : com/splendo/kaluga/bluetooth/scanner/ScanningState$NoBluetooth, com/splendo/kaluga/bluetooth/scanner/ScanningState$Permitted {
	public abstract fun getEnable ()Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$NoBluetooth$MissingPermissions : com/splendo/kaluga/bluetooth/scanner/ScanningState$NoBluetooth {
	public abstract fun permit (Z)Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$NoHardware : com/splendo/kaluga/bluetooth/scanner/ScanningState {
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$NotInitialized : com/splendo/kaluga/bluetooth/scanner/ScanningState$Inactive {
}

public abstract interface class com/splendo/kaluga/bluetooth/scanner/ScanningState$Permitted : com/splendo/kaluga/bluetooth/scanner/ScanningState$Initialized {
	public abstract fun getRevokePermission ()Lkotlin/jvm/functions/Function1;
}

public abstract class com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl {
	public static final field Companion Lcom/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Companion;
}

public abstract class com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Active : com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl, com/splendo/kaluga/state/HandleAfterNewStateIsSet, com/splendo/kaluga/state/HandleBeforeOldStateIsRemoved {
	public fun afterNewStateIsSet (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun afterNewStateIsSet (Lcom/splendo/kaluga/state/KalugaState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun beforeOldStateIsRemoved (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun beforeOldStateIsRemoved (Lcom/splendo/kaluga/state/KalugaState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getDeinitialize ()Lkotlin/jvm/functions/Function1;
	public abstract fun getDiscovered ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public abstract fun getPaired ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public abstract fun getScanner ()Lcom/splendo/kaluga/bluetooth/scanner/Scanner;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Companion {
	public final fun getNothingFound ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Devices;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Deinitialized : com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl, com/splendo/kaluga/bluetooth/scanner/ScanningState$Deinitialized {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;Lcom/splendo/kaluga/bluetooth/scanner/Scanner;)V
	public final fun component1 ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public final fun component2 ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public final fun component3 ()Lcom/splendo/kaluga/bluetooth/scanner/Scanner;
	public final fun copy (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;Lcom/splendo/kaluga/bluetooth/scanner/Scanner;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Deinitialized;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Deinitialized;Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;Lcom/splendo/kaluga/bluetooth/scanner/Scanner;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Deinitialized;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPreviouslyDiscovered ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public fun getPreviouslyPaired ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public fun getReinitialize ()Lkotlin/jvm/functions/Function1;
	public final fun getScanner ()Lcom/splendo/kaluga/bluetooth/scanner/Scanner;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Devices : com/splendo/kaluga/bluetooth/scanner/ScanningState$Devices {
	public fun <init> (Ljava/util/List;Ljava/util/Set;)V
	public fun <init> (Ljava/util/Set;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/Set;
	public final fun copy (Ljava/util/List;Ljava/util/Set;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Devices;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Devices;Ljava/util/List;Ljava/util/Set;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Devices;
	public synthetic fun copyAndAdd (Lcom/splendo/kaluga/bluetooth/device/Device;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public fun copyAndAdd (Lcom/splendo/kaluga/bluetooth/device/Device;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Devices;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun foundForFilter (Ljava/util/Set;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public fun foundForFilter (Ljava/util/Set;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Devices;
	public fun getDevices ()Ljava/util/List;
	public fun getFilter ()Ljava/util/Set;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Enabled : com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Active {
	public fun afterNewStateIsSet (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun afterNewStateIsSet (Lcom/splendo/kaluga/state/KalugaState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun beforeOldStateIsRemoved (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun beforeOldStateIsRemoved (Lcom/splendo/kaluga/state/KalugaState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getDisable ()Lkotlin/jvm/functions/Function1;
	protected abstract fun getPermittedHandler ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$PermittedHandler;
	public final fun getRevokePermission ()Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Enabled$Idle : com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Enabled, com/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Idle {
	public fun getDiscovered ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public fun getPaired ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public fun getScanner ()Lcom/splendo/kaluga/bluetooth/scanner/Scanner;
	public fun pairedDevices (Ljava/util/Set;Ljava/util/Set;Ljava/util/List;)Lkotlin/jvm/functions/Function1;
	public fun refresh (Ljava/util/Set;)Lkotlin/jvm/functions/Function1;
	public fun retrievePairedDevices (Ljava/util/Set;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun startScanning (Ljava/util/Set;)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Enabled$Scanning : com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Enabled, com/splendo/kaluga/bluetooth/scanner/ScanningState$Enabled$Scanning, com/splendo/kaluga/state/HandleAfterCreating, com/splendo/kaluga/state/HandleAfterOldStateIsRemoved {
	public fun afterCreatingNewState (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun afterCreatingNewState (Lcom/splendo/kaluga/state/KalugaState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun afterOldStateIsRemoved (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun afterOldStateIsRemoved (Lcom/splendo/kaluga/state/KalugaState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun discoverDevice (Ljava/lang/String;ILcom/splendo/kaluga/bluetooth/device/BaseAdvertisementData;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getDiscovered ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public fun getPaired ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public fun getScanner ()Lcom/splendo/kaluga/bluetooth/scanner/Scanner;
	public fun getStopScanning ()Lkotlin/jvm/functions/Function1;
	public fun pairedDevices (Ljava/util/Set;Ljava/util/Set;Ljava/util/List;)Lkotlin/jvm/functions/Function1;
	public fun retrievePairedDevices (Ljava/util/Set;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Initializing : com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Active, com/splendo/kaluga/bluetooth/scanner/ScanningState$Initializing {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;Lcom/splendo/kaluga/bluetooth/scanner/Scanner;)V
	public final fun component1 ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public final fun component2 ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public final fun component3 ()Lcom/splendo/kaluga/bluetooth/scanner/Scanner;
	public final fun copy (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;Lcom/splendo/kaluga/bluetooth/scanner/Scanner;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Initializing;
	public static synthetic fun copy$default (Lcom/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Initializing;Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;Lcom/splendo/kaluga/bluetooth/scanner/Scanner;ILjava/lang/Object;)Lcom/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Initializing;
	public fun equals (Ljava/lang/Object;)Z
	public fun getDiscovered ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public fun getPaired ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public fun getScanner ()Lcom/splendo/kaluga/bluetooth/scanner/Scanner;
	public fun hashCode ()I
	public fun initialized (ZZ)Lkotlin/jvm/functions/Function1;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$NoBluetooth : com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Active {
	public synthetic fun getDiscovered ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public fun getDiscovered ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Devices;
	public synthetic fun getPaired ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningState$Devices;
	public fun getPaired ()Lcom/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$Devices;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$NoBluetooth$Disabled : com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$NoBluetooth, com/splendo/kaluga/bluetooth/scanner/ScanningState$NoBluetooth$Disabled {
	public fun afterNewStateIsSet (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun afterNewStateIsSet (Lcom/splendo/kaluga/state/KalugaState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun beforeOldStateIsRemoved (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun beforeOldStateIsRemoved (Lcom/splendo/kaluga/state/KalugaState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEnable ()Lkotlin/jvm/functions/Function1;
	public fun getRevokePermission ()Lkotlin/jvm/functions/Function1;
	public fun getScanner ()Lcom/splendo/kaluga/bluetooth/scanner/Scanner;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$NoBluetooth$MissingPermissions : com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$NoBluetooth, com/splendo/kaluga/bluetooth/scanner/ScanningState$NoBluetooth$MissingPermissions {
	public fun getScanner ()Lcom/splendo/kaluga/bluetooth/scanner/Scanner;
	public fun permit (Z)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$NoHardware : com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl, com/splendo/kaluga/bluetooth/scanner/ScanningState$NoHardware {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$NoHardware;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$NotInitialized : com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl, com/splendo/kaluga/bluetooth/scanner/ScanningState$NotInitialized {
	public static final field INSTANCE Lcom/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$NotInitialized;
	public final fun startInitializing (Lcom/splendo/kaluga/bluetooth/scanner/Scanner;)Lkotlin/jvm/functions/Function1;
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningStateImpl$PermittedHandler {
	public fun <init> (Lcom/splendo/kaluga/bluetooth/scanner/Scanner;)V
	public final fun afterNewStateIsSet (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState;)V
	public final fun beforeOldStateIsRemoved (Lcom/splendo/kaluga/bluetooth/scanner/ScanningState;)V
	public final fun getRevokePermission ()Lkotlin/jvm/functions/Function1;
	public final fun getScanner ()Lcom/splendo/kaluga/bluetooth/scanner/Scanner;
}

public class com/splendo/kaluga/bluetooth/scanner/ScanningStateImplRepo : com/splendo/kaluga/bluetooth/scanner/BaseScanningStateRepo {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function4;Lkotlin/coroutines/CoroutineContext;)V
}

public final class com/splendo/kaluga/bluetooth/scanner/ScanningStateRepo : com/splendo/kaluga/bluetooth/scanner/ScanningStateImplRepo {
	public fun <init> (Lkotlin/jvm/functions/Function1;Lcom/splendo/kaluga/bluetooth/scanner/BaseScanner$Builder;Lkotlin/jvm/functions/Function4;Lkotlin/coroutines/CoroutineContext;)V
}

