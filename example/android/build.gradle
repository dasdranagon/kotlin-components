plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'org.jlleitschuh.gradle.ktlint'
    id "org.jetbrains.kotlin.plugin.serialization"
}

//noinspection UnnecessaryQualifiedReference
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

android {

    compileSdkVersion gradle.android_compile_sdk_version
    buildToolsVersion gradle.android_build_tools_version
    defaultConfig {
        applicationId "com.splendo.kaluga.example"
        minSdkVersion gradle.android_min_sdk_version
        targetSdkVersion gradle.android_target_sdk_version
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            keyAlias "key0"
            keyPassword "nckI1UYofHIMkOnXpmZJVA"
            storeFile file("../keystore/debug.keystore")
            storePassword "nckI1UYofHIMkOnXpmZJVA"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/kotlinx-coroutines-core.kotlin_module'
        exclude 'META-INF/shared_debug.kotlin_module'
        exclude 'META-INF/kotlinx-serialization-runtime.kotlin_module'
    }

    buildFeatures.dataBinding = true
}

kotlin {
    sourceSets.all {
        languageSettings {
            useExperimentalAnnotation 'kotlin.ExperimentalStdlibApi'
            useExperimentalAnnotation 'kotlinx.serialization.ExperimentalSerializationApi'
        }
    }
}

gradle.ext.component_type = gradle.ext.component_type_composeApp

apply from: "../../gradle/android_compose.gradle"

gradle.ext.component_type = gradle.ext.component_type_default

dependencies {

    if (gradle.ext.example_as_root) {
        // if the example is the root we use a maven dependency instead of the project
        implementation "com.splendo.kaluga:architecture-compose:$gradle.ext.library_version"
        implementation project(':shared')
    }
    else {
        implementation project(':shared')
        implementation project(":base-permissions")
        implementation project(":location-permissions")
        implementation project(":bluetooth-permissions")
        implementation project(":camera-permissions")
        implementation project(":contacts-permissions")
        implementation project(":microphone-permissions")
        implementation project(":storage-permissions")
        implementation project(":notifications-permissions")
        implementation project(":calendar-permissions")
        implementation project(":logging")
        implementation project(":alerts")
        implementation project(":hud")
        implementation project(":architecture")
        implementation project(":architecture-compose")
    }

    implementation "androidx.fragment:fragment-ktx:$gradle.androidx_fragment_version"
    implementation "com.google.android.gms:play-services-location:$gradle.play_services_version"
    implementation "com.google.android.material:material:$gradle.material_version"
    implementation "androidx.constraintlayout:constraintlayout:$gradle.androidx_constraint_layout_version"

    implementation "io.insert-koin:koin-android:$gradle.koin_version"
    implementation "androidx.lifecycle:lifecycle-service:$gradle.androidx_lifecycle_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$gradle.kotlinx_coroutines_version!!"
    
    implementation "androidx.compose.material:material:$gradle.androidx_compose_version"
    implementation "androidx.navigation:navigation-compose:$gradle.androidx_navigation_compose_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:$gradle.serialization_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$gradle.serialization_version"

    implementation "com.google.android.material:material:$gradle.material_components_version"
    implementation "com.google.android.material:compose-theme-adapter:$gradle.material_components_adapter_version"
}
