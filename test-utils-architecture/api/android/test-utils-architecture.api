public abstract class com/splendo/kaluga/test/architecture/BaseUIThreadViewModelTest : com/splendo/kaluga/test/base/BaseUIThreadTest {
	public fun <init> ()V
}

public class com/splendo/kaluga/test/architecture/BaseUIThreadViewModelTest$LazyViewModelTestContext : com/splendo/kaluga/test/architecture/BaseUIThreadViewModelTest$ViewModelTestContext, kotlinx/coroutines/CoroutineScope {
	public fun <init> (Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function0;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getViewModel ()Lcom/splendo/kaluga/architecture/viewmodel/LifecycleViewModel;
}

public abstract interface class com/splendo/kaluga/test/architecture/BaseUIThreadViewModelTest$ViewModelTestContext : com/splendo/kaluga/test/base/BaseUIThreadTest$TestContext {
	public fun dispose ()V
	public abstract fun getViewModel ()Lcom/splendo/kaluga/architecture/viewmodel/LifecycleViewModel;
}

public final class com/splendo/kaluga/test/architecture/GetOrPutAndRemoveOnDestroyFromCacheKt {
	public static final fun getLifecycleAwareActivityCache ()Lcom/splendo/kaluga/base/collections/ConcurrentMutableMap;
}

public final class com/splendo/kaluga/test/architecture/LifecycleManagerObserverKt {
	public static final fun lifecycleManagerObserver (Landroidx/appcompat/app/AppCompatActivity;)Lcom/splendo/kaluga/architecture/lifecycle/LifecycleManagerObserver;
}

public final class com/splendo/kaluga/test/architecture/MockActivityLifecycleSubscriber : com/splendo/kaluga/architecture/lifecycle/ActivityLifecycleSubscribable {
	public fun <init> ()V
	public fun getManager ()Lcom/splendo/kaluga/architecture/lifecycle/ActivityLifecycleSubscribable$LifecycleManager;
	public fun setManager (Lcom/splendo/kaluga/architecture/lifecycle/ActivityLifecycleSubscribable$LifecycleManager;)V
	public fun subscribe (Lcom/splendo/kaluga/architecture/lifecycle/ActivityLifecycleSubscribable$LifecycleManager;)V
	public fun unsubscribe ()V
}

public final class com/splendo/kaluga/test/architecture/MockNavigationException : com/splendo/kaluga/architecture/navigation/NavigationException {
	public fun <init> (Lcom/splendo/kaluga/architecture/navigation/NavigationAction;)V
}

public class com/splendo/kaluga/test/architecture/MockNavigator : com/splendo/kaluga/architecture/navigation/Navigator {
	public static final field Companion Lcom/splendo/kaluga/test/architecture/MockNavigator$Companion;
	public fun <init> ()V
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getNavigateMock ()Lcom/splendo/kaluga/test/base/mock/MethodMock;
	public fun navigate (Lcom/splendo/kaluga/architecture/navigation/NavigationAction;)V
}

public final class com/splendo/kaluga/test/architecture/MockNavigator$Companion {
	public final fun navigatorThatThrows ()Lcom/splendo/kaluga/test/architecture/MockNavigator;
}

public abstract class com/splendo/kaluga/test/architecture/SimpleUIThreadViewModelTest : com/splendo/kaluga/test/architecture/UIThreadViewModelTest {
	public fun <init> ()V
	public abstract fun createViewModel ()Lcom/splendo/kaluga/architecture/viewmodel/LifecycleViewModel;
	public fun getCreateTestContext ()Lkotlin/jvm/functions/Function2;
}

public abstract class com/splendo/kaluga/test/architecture/UIThreadViewModelTest : com/splendo/kaluga/test/base/UIThreadTest {
	public fun <init> ()V
}

public class com/splendo/kaluga/test/architecture/UIThreadViewModelTest$LazyViewModelTestContext : com/splendo/kaluga/test/architecture/BaseUIThreadViewModelTest$LazyViewModelTestContext, com/splendo/kaluga/test/architecture/UIThreadViewModelTest$ViewModelTestContext {
	public fun <init> (Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function0;)V
}

public abstract interface class com/splendo/kaluga/test/architecture/UIThreadViewModelTest$ViewModelTestContext : com/splendo/kaluga/test/architecture/BaseUIThreadViewModelTest$ViewModelTestContext, com/splendo/kaluga/test/base/UIThreadTest$TestContext {
}

public abstract class com/splendo/kaluga/test/architecture/ViewModelTest : com/splendo/kaluga/test/base/BaseTest {
	public field viewModel Lcom/splendo/kaluga/architecture/viewmodel/LifecycleViewModel;
	public fun <init> ()V
	public fun afterTest ()V
	public fun beforeTest ()V
	protected abstract fun createViewModel ()Lcom/splendo/kaluga/architecture/viewmodel/LifecycleViewModel;
	public final fun getViewModel ()Lcom/splendo/kaluga/architecture/viewmodel/LifecycleViewModel;
	public final fun setViewModel (Lcom/splendo/kaluga/architecture/viewmodel/LifecycleViewModel;)V
}

public final class com/splendo/kaluga/test/architecture/viewmodel/CleanUpKt {
	public static final fun cleanUp (Lcom/splendo/kaluga/architecture/viewmodel/LifecycleViewModel;)V
}

